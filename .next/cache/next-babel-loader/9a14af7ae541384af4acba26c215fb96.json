{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// Modal.js\nimport React from 'react';\nimport { createPortal } from 'react-dom'; // We get hold of the div with the id modal that we have created in index.html\n\nvar modalRoot = document.getElementById('modal');\n\nvar Modal = /*#__PURE__*/function (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  var _super = _createSuper(Modal);\n\n  function Modal(props) {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    _this = _super.call(this, props); // We create an element div for this modal\n\n    _this.element = document.createElement('div');\n    return _this;\n  } // We append the created div to the div#modal\n\n\n  _createClass(Modal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      modalRoot.appendChild(this.element);\n    }\n    /**\r\n      * We remove the created div when this Modal Component is unmounted\r\n      * Used to clean up the memory to avoid memory leak \r\n      */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      modalRoot.removeChild(this.element);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return createPortal(this.props.children, this.element);\n    }\n  }]);\n\n  return Modal;\n}(React.Component);\n\nexport default Modal;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/pages/Modal.tsx"],"names":["React","createPortal","modalRoot","document","getElementById","Modal","props","element","createElement","appendChild","removeChild","children","Component"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,WAA7B,C,CACA;;AACA,IAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAyB,OAAzB,CAAlB;;IACMC,K;;;;;AACH,iBAAaC,KAAb,EAAqB;AAAA;;AAAA;;AAClB,8BAAOA,KAAP,EADkB,CAEtB;;AACE,UAAKC,OAAL,GAAeJ,QAAQ,CAACK,aAAT,CAAwB,KAAxB,CAAf;AAHoB;AAIpB,G,CACF;;;;;wCACqB;AACjBN,MAAAA,SAAS,CAACO,WAAV,CAAuB,KAAKF,OAA5B;AACF;AACF;;;;;;;2CAIwB;AACpBL,MAAAA,SAAS,CAACQ,WAAV,CAAuB,KAAKH,OAA5B;AACF;;;6BACK;AACH,aAAON,YAAY,CAAE,KAAKK,KAAL,CAAWK,QAAb,EAAuB,KAAKJ,OAA5B,CAAnB;AACF;;;;EAnBgBP,KAAK,CAACY,S;;AAqB1B,eAAeP,KAAf","sourcesContent":["// Modal.js\r\nimport React from 'react';\r\nimport { createPortal } from 'react-dom';\r\n// We get hold of the div with the id modal that we have created in index.html\r\nconst modalRoot = document.getElementById( 'modal' );\r\nclass Modal extends React.Component {\r\n   constructor( props ) {\r\n      super( props );\r\n  // We create an element div for this modal\r\n    this.element = document.createElement( 'div' );\r\n   }\r\n  // We append the created div to the div#modal\r\n   componentDidMount() {\r\n      modalRoot.appendChild( this.element );\r\n   }\r\n  /**\r\n    * We remove the created div when this Modal Component is unmounted\r\n    * Used to clean up the memory to avoid memory leak \r\n    */\r\n   componentWillUnmount() {\r\n      modalRoot.removeChild( this.element );\r\n   }\r\nrender() {\r\n      return createPortal( this.props.children, this.element );\r\n   }\r\n}\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}