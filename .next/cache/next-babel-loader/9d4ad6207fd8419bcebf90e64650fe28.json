{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Thais Linda\\\\juscredit-web\\\\components\\\\Button\\\\Button.tsx\";\nvar __jsx = React.createElement;\nimport './Button.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      open: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenModal\", function () {\n      _this.setState({\n        open: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseModal\", function () {\n      _this.setState({\n        open: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: this.onOpenModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Open modal\"), __jsx(Modal, {\n        open: open,\n        onClose: this.onCloseModal,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Simple centered modal\")));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport { Index as default };\nReactDOM.render(__jsx(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), document.getElementById('app'));\n\nvar Button = function Button(props) {\n  var color = props.color,\n      loading = props.loading;\n  return __jsx(\"button\", _extends({\n    className: \"button \".concat(color)\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), loading === 'true' ? __jsx(\"img\", {\n    height: \"32\",\n    width: \"32\",\n    src: \"/loading.svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : props.children);\n};\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/components/Button/Button.tsx"],"names":["React","ReactDOM","Modal","Index","open","setState","state","onOpenModal","onCloseModal","Component","render","document","getElementById","Button","props","color","loading","children"],"mappings":";;;;;;;;;;AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,mCAAP;AACA,SAASC,KAAT,QAAsB,wBAAtB;;IAEqBC,K;;;;;;;;;;;;;;;;4DACX;AACNC,MAAAA,IAAI,EAAE;AADA,K;;kEAIM,YAAM;AAClB,YAAKC,QAAL,CAAc;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;mEAEc,YAAM;AACnB,YAAKC,QAAL,CAAc;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,UACCA,IADD,GACU,KAAKE,KADf,CACCF,IADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKG,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAEH,IAAb;AAAmB,QAAA,OAAO,EAAE,KAAKI,YAAjC;AAA+C,QAAA,MAAM,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CAFF,CADF;AAQD;;;;EAvBgCR,KAAK,CAACS,S;;SAApBN,K;AA0BrBF,QAAQ,CAACS,MAAT,CAAgB,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAzB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAA0G;AAAA,MAC7GC,KAD6G,GAC1FD,KAD0F,CAC7GC,KAD6G;AAAA,MACtGC,OADsG,GAC1FF,KAD0F,CACtGE,OADsG;AAErH,SAAQ;AAAQ,IAAA,SAAS,mBAAYD,KAAZ;AAAjB,KAA0CD,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAmDE,OAAO,KAAK,MAAZ,GAAsB;AAAK,IAAA,MAAM,EAAC,IAAZ;AAAiB,IAAA,KAAK,EAAC,IAAvB;AAA4B,IAAA,GAAG,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,GAA2EF,KAAK,CAACG,QAApI,CAAR;AACH,CAHD;;AAKA,eAAeJ,MAAf","sourcesContent":["import './Button.scss'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\n \r\nexport default class Index extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n \r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n \r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n \r\n  render() {\r\n    const { open } = this.state;\r\n    return (\r\n      <div>\r\n        <button onClick={this.onOpenModal}>Open modal</button>\r\n        <Modal open={open} onClose={this.onCloseModal} center>\r\n          <h2>Simple centered modal</h2>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nReactDOM.render(<App />, document.getElementById('app'));\r\nconst Button = (props: React.ButtonHTMLAttributes<HTMLButtonElement> & { color: string, loading?: boolean | string }) => {\r\n    const { color, loading } = props;\r\n    return (<button className={`button ${color}`} {...props} >{loading === 'true' ? (<img height=\"32\" width=\"32\" src=\"/loading.svg\" />) : props.children}</button>)\r\n}\r\n\r\nexport default Button\r\n"]},"metadata":{},"sourceType":"module"}