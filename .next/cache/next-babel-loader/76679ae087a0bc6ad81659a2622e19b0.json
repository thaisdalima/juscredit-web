{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport './RegisterForm.scss';\nimport StyledInput from '../Input/Input';\nimport Button from '../Button/Button';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Masks } from '../../utils/mask';\nimport { Validators } from '../../utils/validators';\nconst stringMap = new Map([['user', {\n  cardTitle: 'Cadastrando meus dados',\n  formTitle: 'Informe seus contatos antes de receber acesso gratuito a nossa plataforma.'\n}], ['producer', {\n  cardTitle: 'Cadastrando meus dados',\n  formTitle: 'Informe seus contatos antes de receber acesso gratuito a nossa plataforma.'\n}], ['update-producer', {\n  cardTitle: 'Atualizando os meus dados',\n  formTitle: 'Confirme seus contatos antes de atualizar seus dados:'\n}]]);\nconst MAIL_REGEX = new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i);\nconst PHONE_REGEX = new RegExp(/^\\([1-9]{2}\\) [0-9]{5}\\-[0-9]{4}$/i);\nconst ONLY_NUMBERS_REGEX = new RegExp(/^\\d+$/);\n\nconst validate = values => {\n  let errors = {};\n\n  if (!values.email) {\n    errors.email = 'Campo obrigatório';\n  } else if (!MAIL_REGEX.test(values.email)) {\n    errors.email = 'Email inválido';\n  }\n\n  if (!values.confirmEmail) {\n    errors.confirmEmail = 'Campo obrigatório';\n  } else if (values.confirmEmail !== values.email) {\n    errors.confirmEmail = 'Email não coincide';\n  }\n\n  if (!values.phone) {\n    errors.phone = 'Campo obrigatório';\n  } else if (!PHONE_REGEX.test(values.phone) && !ONLY_NUMBERS_REGEX.test(values.phone)) {\n    errors.phone = 'Celular inválido';\n  }\n\n  if (!values.contactDocument) {\n    errors.contactDocument = 'Campo obrigatório';\n  } else if (!Validators.cpf(values.contactDocument)) {\n    errors.contactDocument = 'CPF inválido';\n  }\n\n  if (values.companyDocument && !Validators.cnpj(values.companyDocument)) {\n    errors.companyDocument = 'CNPJ inválido';\n  }\n\n  if (!values.termsOfUse) {\n    errors.termsOfUse = \"É necessário concordar com os termos de uso e com a política de privacidade\";\n  }\n\n  return errors;\n};\n\nconst RegisterForm = ({\n  profile,\n  onSubmit,\n  producer = null\n}) => {\n  const {\n    cardTitle,\n    formTitle\n  } = stringMap.get(profile);\n  return __jsx(\"div\", {\n    className: \"card\"\n  }, __jsx(\"div\", {\n    className: \"title-container\"\n  }, __jsx(\"h1\", {\n    className: \"card-title\"\n  }, cardTitle)), __jsx(\"div\", {\n    className: \"card-content\"\n  }, __jsx(\"label\", null, \"Confirmar dados\"), __jsx(Formik, {\n    initialValues: {\n      contactName: '',\n      contactDocument: '',\n      email: '',\n      confirmEmail: '',\n      phone: '',\n      companyName: '',\n      companyDocument: '',\n      termsOfUse: false\n    },\n    validate: validate,\n    onSubmit: ({\n      email,\n      phone,\n      contactDocument,\n      contactName,\n      companyName,\n      companyDocument\n    }) => onSubmit({\n      email,\n      phone,\n      contactName,\n      contactDocument,\n      companyName,\n      companyDocument\n    })\n  }, ({\n    errors,\n    touched,\n    handleChange,\n    values,\n    setValues,\n    setTouched\n  }) => {\n    if (producer && !values.contactName && !values.companyName) {\n      setValues(_objectSpread(_objectSpread({}, producer), {}, {\n        confirmEmail: producer.email\n      }));\n      setTouched(values);\n    }\n\n    return __jsx(Form, {\n      className: \"form-container\"\n    }, __jsx(\"h2\", {\n      className: \"form-title\"\n    }, formTitle), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Nome completo\"), __jsx(Field, {\n      name: \"contactName\",\n      mask: null,\n      placeholder: \"Nome completo\",\n      onChange: handleChange('contactName'),\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"contactName\",\n      component: \"span\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"CPF\"), __jsx(Field, {\n      name: \"contactDocument\",\n      mask: Masks.CPF,\n      placeholder: \"CPF\",\n      onChange: handleChange('contactDocument'),\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"contactDocument\",\n      component: \"span\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Nome da empresa (opcional)\"), __jsx(Field, {\n      name: \"companyName\",\n      mask: null,\n      placeholder: \"Nome da empresa\",\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"companyName\",\n      component: \"span\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"CNPJ (opcional)\"), __jsx(Field, {\n      name: \"companyDocument\",\n      mask: Masks.CNPJ,\n      placeholder: \"CNPJ\",\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"companyDocument\",\n      component: \"span\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Email\"), __jsx(Field, {\n      name: \"email\",\n      mask: null,\n      placeholder: \"Email\",\n      component: StyledInput,\n      disabled: profile === 'update-producer'\n    }), __jsx(ErrorMessage, {\n      name: \"email\",\n      component: \"span\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Confirme seu email\"), __jsx(Field, {\n      name: \"confirmEmail\",\n      mask: null,\n      placeholder: \"Confirme seu email\",\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"confirmEmail\",\n      component: \"span\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Celular com DDD\"), __jsx(Field, {\n      name: \"phone\",\n      mask: \"(99) 99999-9999\",\n      placeholder: \"Celular com DDD\",\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"phone\",\n      component: \"span\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group checkbox\"\n    }, __jsx(Field, {\n      name: \"termsOfUse\",\n      type: \"checkbox\",\n      component: \"input\",\n      checked: values.termsOfUse\n    }), __jsx(\"label\", null, \"Li e concordo com os \", __jsx(\"a\", null, \"termos de uso\"), \" e com a \", __jsx(\"a\", null, \"pol\\xEDtica de privacidade\"), \".\"))), __jsx(\"div\", {\n      className: \"button-container\"\n    }, __jsx(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      tabIndex: 1,\n      disabled: Object.keys(touched).length < 2 || Object.keys(errors).length > 0\n    }, \"Avan\\xE7ar\"), profile === 'update-producer' && __jsx(\"span\", null, \"Caso voc\\xEA tenha sido encontrado em nossa base e queira atualizar o seu email e/ou telefone entre em contato conosco em \", __jsx(\"a\", {\n      href: \"mailto:contato@organis8.com.br\"\n    }, \"contato@organis8.com.br\"))));\n  })));\n};\n\nexport default RegisterForm;","map":null,"metadata":{},"sourceType":"module"}