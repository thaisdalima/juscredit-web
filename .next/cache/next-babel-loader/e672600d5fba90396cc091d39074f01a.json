{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Thais Linda\\\\juscredit-web\\\\pages\\\\cadastro\\\\parceiro.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport RegisterForm from \"../../components/Register/RegisterForm\";\nimport { useState } from \"react\";\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\n\nvar Parceiro = function Parceiro() {\n  var _useState = useState(0),\n      step = _useState[0],\n      setStep = _useState[1];\n\n  var _useState2 = useState(null),\n      userValues = _useState2[0],\n      setUserValues = _useState2[1];\n\n  var _useState3 = useState(null),\n      confirmationChoice = _useState3[0],\n      setConfirmationChoice = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      invalidCode = _useState5[0],\n      setInvalid = _useState5[1];\n\n  var handleUserSubmit = function handleUserSubmit(values) {\n    setUserValues(values);\n    setStep(1);\n  };\n\n  var handleConfimationChoice = function handleConfimationChoice(choice) {\n    return _regeneratorRuntime.async(function handleConfimationChoice$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setConfirmationChoice(choice);\n            _context.prev = 1;\n            setLoading(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(sendConfirmation(choice));\n\n          case 5:\n            setLoading(false);\n            setStep(2);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], _Promise);\n  };\n\n  var sendConfirmation = function sendConfirmation(choice) {\n    var email, phone, res;\n    return _regeneratorRuntime.async(function sendConfirmation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = userValues.email, phone = userValues.phone;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"\".concat(process.env.API_URL, \"/api/confirmation/send-\").concat(choice), {\n              method: 'POST',\n              body: _JSON$stringify(choice === 'email' ? {\n                email: email\n              } : {\n                phone: \"+55\".concat(phone.replace(/\\D/g, ''))\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 4:\n            res = _context2.sent;\n\n            if (!(res.status !== 200)) {\n              _context2.next = 7;\n              break;\n            }\n\n            throw res;\n\n          case 7:\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            throw _context2.t0;\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 9]], _Promise);\n  };\n\n  var handleConfimation = function handleConfimation(value) {\n    var email, phone, res;\n    return _regeneratorRuntime.async(function handleConfimation$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            email = userValues.email, phone = userValues.phone;\n            setLoading(true);\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(fetch(\"\".concat(process.env.API_URL, \"/api/confirmation/verify\"), {\n              method: 'POST',\n              body: _JSON$stringify({\n                target: confirmationChoice === 'email' ? email : \"+55\".concat(phone.replace(/\\D/g, '')),\n                code: value\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 5:\n            res = _context3.sent;\n\n            if (!(res.status === 200)) {\n              _context3.next = 13;\n              break;\n            }\n\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(createUser(_objectSpread({}, userValues)));\n\n          case 9:\n            document.cookie = \"lead=\".concat(true, \"; path=/\");\n            setStep(3);\n            _context3.next = 14;\n            break;\n\n          case 13:\n            setInvalid(true);\n\n          case 14:\n            _context3.next = 19;\n            break;\n\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](2);\n            console.log(_context3.t0);\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[2, 16]], _Promise);\n  };\n\n  var createUser = function createUser(body) {\n    var res, data;\n    return _regeneratorRuntime.async(function createUser$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"\".concat(process.env.API_URL, \"/api/nao_produtores\"), {\n              method: 'POST',\n              body: _JSON$stringify(body),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 3:\n            res = _context4.sent;\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data);\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error(_context4.t0);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 10]], _Promise);\n  };\n\n  switch (step) {\n    case 0:\n      return __jsx(RegisterForm, {\n        profile: \"user\",\n        onSubmit: handleUserSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n\n    case 1:\n      return __jsx(ConfirmationChoice, {\n        choice: confirmationChoice,\n        profile: \"user\",\n        values: userValues,\n        onSubmit: handleConfimationChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n\n    case 2:\n      return __jsx(Confirmation, {\n        onSendAgain: function onSendAgain() {\n          return sendConfirmation(confirmationChoice);\n        },\n        invalid: invalidCode,\n        loading: loading.toString(),\n        profile: \"user\",\n        confirmationChoice: confirmationChoice,\n        onSubmit: handleConfimation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n\n    case 3:\n      return __jsx(RegisterSuccess, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n  }\n};\n\nexport default Parceiro;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/pages/cadastro/parceiro.tsx"],"names":["RegisterForm","useState","ConfirmationChoice","Confirmation","RegisterSuccess","Parceiro","step","setStep","userValues","setUserValues","confirmationChoice","setConfirmationChoice","loading","setLoading","invalidCode","setInvalid","handleUserSubmit","values","handleConfimationChoice","choice","sendConfirmation","email","phone","fetch","process","env","API_URL","method","body","replace","headers","res","status","handleConfimation","value","target","code","createUser","document","cookie","console","log","json","data","error","toString"],"mappings":"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","sourcesContent":["import RegisterForm from \"../../components/Register/RegisterForm\";\r\nimport { useState } from \"react\";\r\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\r\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\r\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\r\n\r\nconst Parceiro = () => {\r\n    const [step, setStep] = useState(0)\r\n    const [userValues, setUserValues] = useState(null)\r\n    const [confirmationChoice, setConfirmationChoice] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [invalidCode, setInvalid] = useState(false);\r\n\r\n    const handleUserSubmit = (values) => {\r\n        setUserValues(values)\r\n        setStep(1)\r\n    }\r\n\r\n    const handleConfimationChoice = async (choice) => {\r\n        setConfirmationChoice(choice)\r\n        try {\r\n            setLoading(true)\r\n            await sendConfirmation(choice)\r\n            setLoading(false)\r\n            setStep(2)\r\n        } catch (e) {\r\n            setLoading(false)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const sendConfirmation = async (choice) => {\r\n        const { email, phone } = userValues\r\n        try {\r\n            const res = await fetch(`${process.env.API_URL}/api/confirmation/send-${choice}`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(\r\n                        choice === 'email' ? {\r\n                            email\r\n                        } : {\r\n                                phone: `+55${phone.replace(/\\D/g, '')}`\r\n                            }),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n            if (res.status !== 200) {\r\n                throw res;\r\n            }\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    const handleConfimation = async (value) => {\r\n\r\n        const { email, phone } = userValues;\r\n        setLoading(true)\r\n        try {\r\n            const res = await fetch(`${process.env.API_URL}/api/confirmation/verify`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(\r\n                        {\r\n                            target: confirmationChoice === 'email' ? email : `+55${phone.replace(/\\D/g, '')}`,\r\n                            code: value\r\n                        }),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n\r\n                })\r\n            if (res.status === 200) {\r\n                await createUser({\r\n                    ...userValues\r\n                })\r\n                document.cookie = `lead=${true}; path=/`;\r\n                setStep(3)\r\n            } else {\r\n                setInvalid(true);\r\n            }\r\n\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    const createUser = async (body) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${process.env.API_URL}/api/nao_produtores`,\r\n                {\r\n                    method: 'POST', body: JSON.stringify(body),\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                })\r\n            const data = await res.json();\r\n            return data;\r\n        }\r\n        catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    switch (step) {\r\n\r\n        case 0:\r\n            return <RegisterForm profile=\"user\" onSubmit={handleUserSubmit} />\r\n        case 1:\r\n            return <ConfirmationChoice choice={confirmationChoice} profile=\"user\" values={userValues} onSubmit={handleConfimationChoice} />\r\n        case 2:\r\n            return <Confirmation onSendAgain={() => sendConfirmation(confirmationChoice)} invalid={invalidCode} loading={loading.toString()} profile=\"user\" confirmationChoice={confirmationChoice} onSubmit={handleConfimation} />\r\n        case 3:\r\n            return <RegisterSuccess />\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default Parceiro"]},"metadata":{},"sourceType":"module"}