{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\nconst SignupProducer = () => {\n  const {\n    0: step,\n    1: setStep\n  } = useState(0);\n  const {\n    0: userValues,\n    1: setUserValues\n  } = useState(null);\n  const {\n    0: confirmationChoice,\n    1: setConfirmationChoice\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: invalidCode,\n    1: setInvalid\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    if (router.query.notFound) {\n      setStep(-1);\n    }\n  }, [router.query]);\n\n  const handleUserSubmit = values => {\n    setUserValues(values);\n    setStep(1);\n  };\n\n  const handleConfimationChoice = async choice => {\n    setConfirmationChoice(choice);\n\n    try {\n      setLoading(true);\n      setLoading(false);\n      setStep(2);\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  const handleConfimation = async value => {\n    const {\n      email,\n      phone\n    } = userValues;\n    setLoading(true);\n\n    try {\n      const res = await fetch(`${process.env.API_URL}/api/confirmation/verify`, {\n        method: 'POST',\n        body: JSON.stringify({\n          target: confirmationChoice === 'email' ? email : `+55${phone.replace(/\\D/g, '')}`,\n          code: value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setLoading(false);\n\n      if (res.status === 200) {\n        setStep(3);\n      } else {\n        setInvalid(true);\n      }\n    } catch (e) {\n      setLoading(false);\n      console.log(e);\n    }\n  };\n};\n\nexport default SignupProducer;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/pages/signup/producer.tsx"],"names":["useState","useEffect","useRouter","SignupProducer","step","setStep","userValues","setUserValues","confirmationChoice","setConfirmationChoice","loading","setLoading","invalidCode","setInvalid","router","query","notFound","handleUserSubmit","values","handleConfimationChoice","choice","e","handleConfimation","value","email","phone","res","fetch","process","env","API_URL","method","body","JSON","stringify","target","replace","code","headers","status","console","log"],"mappings":"AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAKA,SAASC,SAAT,QAA0B,aAA1B;;AAGA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAAA,OAACM,UAAD;AAAA,OAAaC;AAAb,MAA8BP,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAA,OAACQ,kBAAD;AAAA,OAAqBC;AAArB,MAA8CT,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACY,WAAD;AAAA,OAAcC;AAAd,MAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMc,MAAM,GAAGZ,SAAS,EAAxB;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,MAAM,CAACC,KAAP,CAAaC,QAAjB,EAA2B;AACvBX,MAAAA,OAAO,CAAC,CAAC,CAAF,CAAP;AACH;AACJ,GAJQ,EAIN,CAACS,MAAM,CAACC,KAAR,CAJM,CAAT;;AAKA,QAAME,gBAAgB,GAAIC,MAAD,IAAY;AACjCX,IAAAA,aAAa,CAACW,MAAD,CAAb;AACAb,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,QAAMc,uBAAuB,GAAG,MAAOC,MAAP,IAAkB;AAC9CX,IAAAA,qBAAqB,CAACW,MAAD,CAArB;;AACA,QAAI;AACAT,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEAA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH,KALD,CAKE,OAAOgB,CAAP,EAAU;AACRV,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEH;AAEJ,GAZD;;AAcA,QAAMW,iBAAiB,GAAG,MAAOC,KAAP,IAAiB;AACvC,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBnB,UAAzB;AACAK,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,YAAMe,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,0BAAxB,EACnB;AACIC,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACF;AACIC,UAAAA,MAAM,EAAE3B,kBAAkB,KAAK,OAAvB,GAAiCgB,KAAjC,GAA0C,MAAKC,KAAK,CAACW,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAyB,EADpF;AAEIC,UAAAA,IAAI,EAAEd;AAFV,SADE,CAFV;AAOIe,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAPb,OADmB,CAAvB;AAaA3B,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,UAAIe,GAAG,CAACa,MAAJ,KAAe,GAAnB,EAAwB;AACpBlC,QAAAA,OAAO,CAAC,CAAD,CAAP;AACH,OAFD,MAEO;AACHQ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AAEJ,KArBD,CAqBE,OAAOQ,CAAP,EAAU;AAERV,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA6B,MAAAA,OAAO,CAACC,GAAR,CAAYpB,CAAZ;AACH;AACJ,GA9BD;AAoCH,CArED;;AAsEA,eAAelB,cAAf","sourcesContent":["import RegisterForm from \"../../components/Register/RegisterForm\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\r\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\r\nimport AddressForm from \"../../components/Register/AddressForm/AddressForm\";\r\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\r\nimport { useRouter } from \"next/router\";\r\nimport ProducerNotFound from \"../../components/Register/ProducerNotFound/ProducerNotFound\";\r\n\r\nconst SignupProducer = () => {\r\n    const [step, setStep] = useState(0)\r\n    const [userValues, setUserValues] = useState(null)\r\n    const [confirmationChoice, setConfirmationChoice] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [invalidCode, setInvalid] = useState(false);\r\n    const router = useRouter()\r\n\r\n\r\n    useEffect(() => {\r\n        if (router.query.notFound) {\r\n            setStep(-1);\r\n        }\r\n    }, [router.query])\r\n    const handleUserSubmit = (values) => {\r\n        setUserValues(values)\r\n        setStep(1)\r\n    }\r\n\r\n    const handleConfimationChoice = async (choice) => {\r\n        setConfirmationChoice(choice)\r\n        try {\r\n            setLoading(true)\r\n        \r\n            setLoading(false)\r\n            setStep(2)\r\n        } catch (e) {\r\n            setLoading(false)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleConfimation = async (value) => {\r\n        const { email, phone } = userValues;\r\n        setLoading(true)\r\n        try {\r\n            const res = await fetch(`${process.env.API_URL}/api/confirmation/verify`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(\r\n                        {\r\n                            target: confirmationChoice === 'email' ? email : `+55${phone.replace(/\\D/g, '')}`,\r\n                            code: value\r\n                        }),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n\r\n                })\r\n            setLoading(false);\r\n            if (res.status === 200) {\r\n                setStep(3)\r\n            } else {\r\n                setInvalid(true);\r\n            }\r\n\r\n        } catch (e) {\r\n\r\n            setLoading(false);\r\n\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    \r\n  \r\n\r\n\r\n}\r\nexport default SignupProducer"]},"metadata":{},"sourceType":"module"}