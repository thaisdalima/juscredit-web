{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thais Linda\\\\juscredit-web\\\\pages\\\\cadastro\\\\investidor.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport RegisterForm from \"../../components/Register/RegisterForm\";\nimport { useState } from \"react\";\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\nimport AddressForm from \"../../components/Register/AddressForm/AddressForm\";\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\n\nconst SignupProducer = () => {\n  const {\n    0: step,\n    1: setStep\n  } = useState(0);\n  const {\n    0: userValues,\n    1: setUserValues\n  } = useState(null);\n  const {\n    0: confirmationChoice,\n    1: setConfirmationChoice\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const handleUserSubmit = values => {\n    setUserValues(values);\n    setStep(1);\n  };\n\n  const handleConfimationChoice = choice => {\n    setConfirmationChoice(choice);\n    setStep(2);\n  };\n\n  const handleConfimation = value => {\n    setStep(3);\n  };\n\n  const handleAddressSubmit = async values => {\n    setLoading(true);\n    const addressString = `${values.address}, ${values.number}, ${values.city}, ${values.state}`;\n    const res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${addressString}&key=AIzaSyD9birqocIzncUHjXSWIrx67UAT865gp84`);\n    const data = await res.json();\n    const {\n      lat,\n      lng\n    } = data.results[0].geometry.location;\n    await createProducer(_objectSpread({\n      address: `${values.address}, ${values.number}`,\n      city: values.city,\n      state: values.state\n    }, userValues, {\n      latitude: lat,\n      longitude: lng\n    }));\n    setStep(4);\n  };\n\n  const createProducer = async body => {\n    try {\n      const res = await fetch('', {\n        method: 'POST',\n        body: JSON.stringify(body)\n      });\n      const data = await res.json();\n      return data;\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  switch (step) {\n    case 0:\n      return __jsx(RegisterForm, {\n        profile: \"investidor\",\n        onSubmit: handleUserSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n\n    case 1:\n      return __jsx(ConfirmationChoice, {\n        profile: \"investidor\",\n        values: userValues,\n        onSubmit: handleConfimationChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n\n    case 2:\n      return __jsx(Confirmation, {\n        profile: \"investidor\",\n        confirmationChoice: confirmationChoice,\n        onSubmit: handleConfimation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n\n    case 3:\n      return __jsx(AddressForm, {\n        profile: \"investidor\",\n        loading: loading,\n        values: userValues,\n        onSubmit: handleAddressSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n\n    case 4:\n      return __jsx(RegisterSuccess, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n  }\n};\n\nexport default SignupProducer;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/pages/cadastro/investidor.tsx"],"names":["RegisterForm","useState","ConfirmationChoice","Confirmation","AddressForm","RegisterSuccess","SignupProducer","step","setStep","userValues","setUserValues","confirmationChoice","setConfirmationChoice","loading","setLoading","handleUserSubmit","values","handleConfimationChoice","choice","handleConfimation","value","handleAddressSubmit","addressString","address","number","city","state","res","fetch","data","json","lat","lng","results","geometry","location","createProducer","latitude","longitude","body","method","JSON","stringify","e","console","error"],"mappings":"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","sourcesContent":["import RegisterForm from \"../../components/Register/RegisterForm\";\t\r\nimport { useState, useEffect } from \"react\";\t\r\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\t\r\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\t\r\nimport AddressForm from \"../../components/Register/AddressForm/AddressForm\";\t\r\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\t\r\nimport { useRouter } from \"next/router\";\t\r\nimport ProducerNotFound from \"../../components/Register/ProducerNotFound/ProducerNotFound\";\t\r\n\r\nconst SignupProducer = () => {\t\r\n    const [step, setStep] = useState(0)\t\r\n    const [userValues, setUserValues] = useState(null)\t\r\n    const [confirmationChoice, setConfirmationChoice] = useState(null);\t\r\n    const [loading, setLoading] = useState(false);\t\r\n\r\n    const handleUserSubmit = (values) => {\t\r\n        setUserValues(values)\t\r\n        setStep(1)\t\r\n    }\t\r\n\r\n    const handleConfimationChoice = (choice) => {\t\r\n        setConfirmationChoice(choice)\t\r\n        setStep(2)\t\r\n    }\t\r\n\r\n    const handleConfimation = (value) => {\t\r\n        setStep(3)\t\r\n    }\t\r\n\r\n    const handleAddressSubmit = async (values) => {\t\r\n        setLoading(true)\t\r\n        const addressString = `${values.address}, ${values.number}, ${values.city}, ${values.state}`\t\r\n        const res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${addressString}&key=AIzaSyD9birqocIzncUHjXSWIrx67UAT865gp84`)\t\r\n        const data = await res.json();\t\r\n        const { lat, lng } = data.results[0].geometry.location\t\r\n\r\n        await createProducer({\t\r\n            address: `${values.address}, ${values.number}`,\t\r\n            city: values.city,\t\r\n            state: values.state,\t\r\n            ...userValues,\t\r\n            latitude: lat,\t\r\n            longitude: lng\t\r\n        })\t\r\n        setStep(4)\t\r\n    }\t\r\n\r\n    const createProducer = async (body) => {\t\r\n        try {\t\r\n            const res = await fetch('', { method: 'POST', body: JSON.stringify(body) })\t\r\n            const data = await res.json();\t\r\n            return data;\t\r\n        } \t\r\n        catch(e) {\t\r\n            console.error(e)\t\r\n        }   \t\r\n    }\t\r\n    switch (step) {\t\r\n\r\n        case 0:\t\r\n            return <RegisterForm profile=\"investidor\" onSubmit={handleUserSubmit} />\t\r\n        case 1:\t\r\n            return <ConfirmationChoice profile=\"investidor\" values={userValues} onSubmit={handleConfimationChoice} />\t\r\n        case 2:\t\r\n            return <Confirmation profile=\"investidor\" confirmationChoice={confirmationChoice} onSubmit={handleConfimation} />\t\r\n        case 3:\t\r\n            return <AddressForm profile=\"investidor\" loading={loading} values={userValues} onSubmit={handleAddressSubmit} />\t\r\n        case 4:\t\r\n            return <RegisterSuccess />\t\r\n    }\t\r\n\r\n\r\n\r\n\r\n}\t\r\nexport default SignupProducer "]},"metadata":{},"sourceType":"module"}