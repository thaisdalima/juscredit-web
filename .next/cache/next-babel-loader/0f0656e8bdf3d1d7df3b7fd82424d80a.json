{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport InteractiveMap from \"../components/InteractiveMap/InteractiveMap\";\nimport fetch from 'isomorphic-unfetch';\nimport { useState } from \"react\";\n\nfunction FindPartners(_ref) {\n  var data = _ref.data;\n  var allPartners = data;\n\n  var _useState = useState(allPartners),\n      partners = _useState[0],\n      setPartners = _useState[1];\n\n  var handleFilter = function handleFilter(filters) {\n    var filterKeys = _Object$keys(filters).filter(function (key) {\n      return Boolean(filters[key]);\n    });\n\n    if (filterKeys.length) {\n      setPartners(allPartners.filter(function (partner) {\n        return filterKeys.every(function (key) {\n          return filters[key] === partner[key];\n        });\n      }));\n    } else {\n      setPartners(allPartners);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(InteractiveMap, {\n    data: partners,\n    onFilterChange: handleFilter\n  }));\n}\n\nFindPartners.getInitialProps = function _callee(ctx) {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.organis8.com.br/api/produtores/items'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default FindPartners;","map":null,"metadata":{},"sourceType":"module"}