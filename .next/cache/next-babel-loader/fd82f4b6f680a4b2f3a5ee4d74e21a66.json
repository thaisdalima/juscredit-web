{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thais Linda\\\\juscredit-web\\\\components\\\\Register\\\\Confirmation\\\\Confirmation.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport '../RegisterForm.scss';\nimport StyledInput from '../../Input/Input';\nimport Button from '../../Button/Button';\nimport { useState } from 'react';\nconst stringMap = new Map([['user', {\n  cardTitle: 'Cadastrando meus dados'\n}], ['producer', {\n  cardTitle: 'Cadastrando meus dados'\n}], ['update-producer', {\n  cardTitle: 'Atualizando os meus dados'\n}]]);\nconst choiceLabel = new Map([['email', 'email'], ['sms', 'celular']]);\n\nconst Confirmation = ({\n  onSubmit,\n  profile,\n  confirmationChoice,\n  loading = 'false',\n  onSendAgain,\n  invalid\n}) => {\n  const {\n    cardTitle\n  } = stringMap.get(profile);\n  const {\n    0: confirmation,\n    1: setConfirmation\n  } = useState('');\n  return __jsx(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"title-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, cardTitle)), __jsx(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Confirmar dados > Confirmar identidade\"), __jsx(\"h2\", {\n    className: \"form-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Enviamos um c\\xF3digo de 6 digitos para o seu \", choiceLabel.get(confirmationChoice)), __jsx(\"div\", {\n    className: \"confirmation-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Por favor, insira o c\\xF3digo abaixo:\"), __jsx(StyledInput, {\n    mask: \"999999\",\n    value: confirmation,\n    onChange: e => setConfirmation(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), __jsx(Button, {\n    loading: loading.toString(),\n    color: \"primary\",\n    onClick: () => onSubmit(confirmation),\n    disabled: confirmation.length !== 6 || confirmation.includes('_'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Continuar\")), invalid && __jsx(\"p\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"C\\xF3digo inv\\xE1lido\"), __jsx(\"div\", {\n    className: \"not-received\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"N\\xE3o recebeu o c\\xF3digo?\"), __jsx(\"a\", {\n    onClick: () => onSendAgain(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Clique aqui para enviar novamente >\"))));\n};\n\nexport default Confirmation;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/components/Register/Confirmation/Confirmation.tsx"],"names":["StyledInput","Button","useState","stringMap","Map","cardTitle","choiceLabel","Confirmation","onSubmit","profile","confirmationChoice","loading","onSendAgain","invalid","get","confirmation","setConfirmation","e","target","value","toString","length","includes"],"mappings":"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","sourcesContent":["import '../RegisterForm.scss'\r\n\r\nimport { FastField } from 'formik';\r\nimport StyledInput from '../../Input/Input';\r\nimport Button from '../../Button/Button';\r\nimport { useState } from 'react';\r\nconst stringMap = new Map([\r\n    ['user', {\r\n        cardTitle: 'Cadastrando meus dados',\r\n    }],\r\n    ['producer', {\r\n        cardTitle: 'Cadastrando meus dados',\r\n    }],\r\n    ['update-producer', {\r\n        cardTitle: 'Atualizando os meus dados',\r\n    }]\r\n])\r\n\r\nconst choiceLabel = new Map([\r\n    ['email', 'email'],\r\n    ['sms', 'celular']\r\n])\r\n\r\nconst Confirmation = ({ onSubmit, profile, confirmationChoice, loading = 'false', onSendAgain, invalid}) => {\r\n    const { cardTitle } = stringMap.get(profile)\r\n    const [confirmation, setConfirmation] = useState('')\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"title-container\">\r\n                <h1 className=\"card-title\">{cardTitle}</h1>\r\n            </div>\r\n            <div className=\"card-content\">\r\n\r\n            <label>Confirmar dados > Confirmar identidade</label>\r\n\r\n            <h2 className=\"form-title\">Enviamos um código de 6 digitos para o seu {choiceLabel.get(confirmationChoice)}</h2>\r\n            <div className=\"confirmation-container\">\r\n                <div className=\"form-group\">\r\n                    <label>Por favor, insira o código abaixo:</label>\r\n                    <StyledInput mask=\"999999\" value={confirmation} onChange={(e)=>setConfirmation(e.target.value)}/>\r\n\r\n                </div>\r\n                <Button loading={loading.toString()} color=\"primary\" onClick={()=> onSubmit(confirmation)} disabled={confirmation.length !== 6 || confirmation.includes('_')}>Continuar</Button>\r\n\r\n            </div>\r\n            {invalid && <p className='error-message'>Código inválido</p>}\r\n            <div className=\"not-received\">\r\n                <span>\r\n                    Não recebeu o código?\r\n                </span>\r\n                <a onClick={()=>onSendAgain()}>Clique aqui para enviar novamente ></a>\r\n            </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Confirmation"]},"metadata":{},"sourceType":"module"}