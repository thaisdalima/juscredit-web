{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Thais Linda\\\\juscredit-web\\\\pages\\\\signup\\\\producer.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport RegisterForm from \"../../components/Register/RegisterForm\";\nimport { useState, useEffect } from \"react\";\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\nimport AddressForm from \"../../components/Register/AddressForm/AddressForm\";\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\nimport { useRouter } from \"next/router\";\nimport ProducerNotFound from \"../../components/Register/ProducerNotFound/ProducerNotFound\";\n\nvar SignupProducer = function SignupProducer() {\n  var _useState = useState(0),\n      step = _useState[0],\n      setStep = _useState[1];\n\n  var _useState2 = useState(null),\n      userValues = _useState2[0],\n      setUserValues = _useState2[1];\n\n  var _useState3 = useState(null),\n      confirmationChoice = _useState3[0],\n      setConfirmationChoice = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      invalidCode = _useState5[0],\n      setInvalid = _useState5[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (router.query.notFound) {\n      setStep(-1);\n    }\n  }, [router.query]);\n\n  var handleUserSubmit = function handleUserSubmit(values) {\n    setUserValues(values);\n    setStep(1);\n  };\n\n  var handleConfimationChoice = function handleConfimationChoice(choice) {\n    return _regeneratorRuntime.async(function handleConfimationChoice$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setConfirmationChoice(choice);\n            _context.prev = 1;\n            setLoading(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(sendConfirmation(choice));\n\n          case 5:\n            setLoading(false);\n            setStep(2);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], _Promise);\n  };\n\n  var handleConfimation = function handleConfimation(value) {\n    var email, phone, _res;\n\n    return _regeneratorRuntime.async(function handleConfimation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = userValues.email, phone = userValues.phone;\n            setLoading(true);\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(fetch(\"\".concat(process.env.API_URL, \"/api/confirmation/verify\"), {\n              method: 'POST',\n              body: _JSON$stringify({\n                target: confirmationChoice === 'email' ? email : \"+55\".concat(phone.replace(/\\D/g, '')),\n                code: value\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 5:\n            _res = _context2.sent;\n            setLoading(false);\n\n            if (_res.status === 200) {\n              setStep(3);\n            } else {\n              setInvalid(true);\n            }\n\n            _context2.next = 14;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](2);\n            setLoading(false);\n            console.log(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 10]], _Promise);\n  };\n\n  var handleAddressSubmit = function handleAddressSubmit(values) {\n    var addressString, _data$results$0$geome, lat, lng;\n\n    return _regeneratorRuntime.async(function handleAddressSubmit$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setLoading(true);\n            addressString = \"\".concat(values.address, \", \").concat(values.number, \", \").concat(values.city, \", \").concat(values.state);\n            _data$results$0$geome = data.results[0].geometry.location, lat = _data$results$0$geome.lat, lng = _data$results$0$geome.lng;\n\n            if (!(res.status === 200)) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(createProducer(_objectSpread({\n              zipcode: values.zipcode,\n              address: \"\".concat(values.address, \", \").concat(values.number),\n              city: values.city,\n              state: values.state,\n              country: 'BR'\n            }, userValues, {\n              latitude: lat,\n              longitude: lng\n            })));\n\n          case 6:\n            document.cookie = \"lead=\".concat(true, \"; path=/\");\n            setStep(4);\n            _context3.next = 11;\n            break;\n\n          case 10:\n            setInvalid(true);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var sendConfirmation = function sendConfirmation(choice) {\n    var email, phone, _res2;\n\n    return _regeneratorRuntime.async(function sendConfirmation$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            email = userValues.email, phone = userValues.phone;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"\".concat(process.env.API_URL, \"/api/confirmation/send-\").concat(choice), {\n              method: 'POST',\n              body: _JSON$stringify(choice === 'email' ? {\n                email: email\n              } : {\n                phone: \"+55\".concat(phone.replace(/\\D/g, ''))\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 4:\n            _res2 = _context4.sent;\n\n            if (!(_res2.status !== 200)) {\n              _context4.next = 7;\n              break;\n            }\n\n            throw _res2;\n\n          case 7:\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](1);\n            throw _context4.t0;\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[1, 9]], _Promise);\n  };\n\n  var createProducer = function createProducer(body) {\n    var _res3, _data;\n\n    return _regeneratorRuntime.async(function createProducer$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"\".concat(process.env.API_URL, \"/api/produtores\"), {\n              method: 'POST',\n              body: _JSON$stringify(body),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 3:\n            _res3 = _context5.sent;\n            _context5.next = 6;\n            return _regeneratorRuntime.awrap(_res3.json());\n\n          case 6:\n            _data = _context5.sent;\n\n            if (!(_res3.status !== 200)) {\n              _context5.next = 9;\n              break;\n            }\n\n            throw _res3.json();\n\n          case 9:\n            return _context5.abrupt(\"return\", _data);\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error(_context5.t0);\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 12]], _Promise);\n  };\n\n  switch (step) {\n    case -1:\n      return __jsx(ProducerNotFound, {\n        onSubmit: function onSubmit() {\n          return setStep(0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n\n    case 0:\n      return __jsx(RegisterForm, {\n        profile: \"producer\",\n        onSubmit: handleUserSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n\n    case 1:\n      return __jsx(ConfirmationChoice, {\n        choice: confirmationChoice,\n        profile: \"producer\",\n        values: userValues,\n        onSubmit: handleConfimationChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      });\n\n    case 2:\n      return __jsx(Confirmation, {\n        onSendAgain: function onSendAgain() {\n          return sendConfirmation(confirmationChoice);\n        },\n        invalid: invalidCode,\n        profile: \"producer\",\n        confirmationChoice: confirmationChoice,\n        onSubmit: handleConfimation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      });\n\n    case 3:\n      return __jsx(AddressForm, {\n        profile: \"producer\",\n        loading: loading.toString(),\n        values: userValues,\n        onSubmit: handleAddressSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      });\n\n    case 4:\n      return __jsx(RegisterSuccess, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n  }\n};\n\nexport default SignupProducer;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/pages/signup/producer.tsx"],"names":["RegisterForm","useState","useEffect","ConfirmationChoice","Confirmation","AddressForm","RegisterSuccess","useRouter","ProducerNotFound","SignupProducer","step","setStep","userValues","setUserValues","confirmationChoice","setConfirmationChoice","loading","setLoading","invalidCode","setInvalid","router","query","notFound","handleUserSubmit","values","handleConfimationChoice","choice","sendConfirmation","handleConfimation","value","email","phone","fetch","process","env","API_URL","method","body","target","replace","code","headers","res","status","console","log","handleAddressSubmit","addressString","address","number","city","state","data","results","geometry","location","lat","lng","createProducer","zipcode","country","latitude","longitude","document","cookie","json","error","toString"],"mappings":"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","sourcesContent":["import RegisterForm from \"../../components/Register/RegisterForm\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\r\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\r\nimport AddressForm from \"../../components/Register/AddressForm/AddressForm\";\r\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\r\nimport { useRouter } from \"next/router\";\r\nimport ProducerNotFound from \"../../components/Register/ProducerNotFound/ProducerNotFound\";\r\n\r\nconst SignupProducer = () => {\r\n    const [step, setStep] = useState(0)\r\n    const [userValues, setUserValues] = useState(null)\r\n    const [confirmationChoice, setConfirmationChoice] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [invalidCode, setInvalid] = useState(false);\r\n    const router = useRouter()\r\n\r\n\r\n    useEffect(() => {\r\n        if (router.query.notFound) {\r\n            setStep(-1);\r\n        }\r\n    }, [router.query])\r\n    const handleUserSubmit = (values) => {\r\n        setUserValues(values)\r\n        setStep(1)\r\n    }\r\n\r\n    const handleConfimationChoice = async (choice) => {\r\n        setConfirmationChoice(choice)\r\n        try {\r\n            setLoading(true)\r\n            await sendConfirmation(choice)\r\n            setLoading(false)\r\n            setStep(2)\r\n        } catch (e) {\r\n            setLoading(false)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleConfimation = async (value) => {\r\n        const { email, phone } = userValues;\r\n        setLoading(true)\r\n        try {\r\n            const res = await fetch(`${process.env.API_URL}/api/confirmation/verify`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(\r\n                        {\r\n                            target: confirmationChoice === 'email' ? email : `+55${phone.replace(/\\D/g, '')}`,\r\n                            code: value\r\n                        }),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n\r\n                })\r\n            setLoading(false);\r\n            if (res.status === 200) {\r\n                setStep(3)\r\n            } else {\r\n                setInvalid(true);\r\n            }\r\n\r\n        } catch (e) {\r\n\r\n            setLoading(false);\r\n\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const handleAddressSubmit = async (values) => {\r\n        setLoading(true)\r\n        const addressString = `${values.address}, ${values.number}, ${values.city}, ${values.state}`\r\n        const { lat, lng } = data.results[0].geometry.location\r\n        if (res.status === 200) {\r\n            await createProducer({\r\n                zipcode: values.zipcode,\r\n                address: `${values.address}, ${values.number}`,\r\n                city: values.city,\r\n                state: values.state,\r\n                country: 'BR',\r\n                ...userValues,\r\n                latitude: lat,\r\n                longitude: lng\r\n            })\r\n\r\n            document.cookie = `lead=${true}; path=/`;\r\n            setStep(4)\r\n        } else {\r\n            setInvalid(true);\r\n        }\r\n    }\r\n\r\n    const sendConfirmation = async (choice) => {\r\n        const { email, phone } = userValues\r\n        try {\r\n            const res = await fetch(`${process.env.API_URL}/api/confirmation/send-${choice}`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(\r\n                        choice === 'email' ? {\r\n                            email\r\n                        } : {\r\n                                phone: `+55${phone.replace(/\\D/g, '')}`\r\n                            }),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n            if (res.status !== 200) {\r\n                throw res;\r\n            }\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n    const createProducer = async (body) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${process.env.API_URL}/api/produtores`,\r\n                {\r\n                    method: 'POST', body: JSON.stringify(body),\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                })\r\n            const data = await res.json();\r\n\r\n            if (res.status !== 200) {\r\n                throw res.json();\r\n            }\r\n            return data;\r\n        }\r\n        catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n    switch (step) {\r\n        case -1:\r\n            return <ProducerNotFound onSubmit={() => setStep(0)} />\r\n        case 0:\r\n            return <RegisterForm profile=\"producer\" onSubmit={handleUserSubmit} />\r\n        case 1:\r\n            return <ConfirmationChoice choice={confirmationChoice} profile=\"producer\" values={userValues} onSubmit={handleConfimationChoice} />\r\n        case 2:\r\n            return <Confirmation onSendAgain={() => sendConfirmation(confirmationChoice)} invalid={invalidCode} profile=\"producer\" confirmationChoice={confirmationChoice} onSubmit={handleConfimation} />\r\n        case 3:\r\n            return <AddressForm profile=\"producer\" loading={loading.toString()} values={userValues} onSubmit={handleAddressSubmit} />\r\n        case 4:\r\n            return <RegisterSuccess />\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default SignupProducer"]},"metadata":{},"sourceType":"module"}