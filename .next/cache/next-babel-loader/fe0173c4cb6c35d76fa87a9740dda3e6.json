{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport RegisterForm from \"../../components/Register/RegisterForm\";\nimport { useState } from \"react\";\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\nimport AddressForm from \"../../components/Register/AddressForm/AddressForm\";\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\n\nvar UpdateProducer = function UpdateProducer() {\n  var _useState = useState(0),\n      step = _useState[0],\n      setStep = _useState[1];\n\n  var _useState2 = useState(null),\n      userValues = _useState2[0],\n      setUserValues = _useState2[1];\n\n  var _useState3 = useState(null),\n      confirmationChoice = _useState3[0],\n      setConfirmationChoice = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var handleUserSubmit = function handleUserSubmit(values) {\n    setUserValues(values);\n    setStep(1);\n  };\n\n  var handleConfimationChoice = function handleConfimationChoice(choice) {\n    setConfirmationChoice(choice);\n    setStep(2);\n  };\n\n  var handleConfimation = function handleConfimation(value) {\n    setStep(3);\n  };\n\n  var handleAddressSubmit = function handleAddressSubmit(values) {\n    var addressString, res, data, _data$results$0$geome, lat, lng;\n\n    return _regeneratorRuntime.async(function handleAddressSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            addressString = \"\".concat(values.address, \", \").concat(values.number, \", \").concat(values.city, \", \").concat(values.state);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://maps.googleapis.com/maps/api/geocode/json?address=\".concat(addressString, \"&key=AIzaSyD9birqocIzncUHjXSWIrx67UAT865gp84\")));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 7:\n            data = _context.sent;\n            _data$results$0$geome = data.results[0].geometry.location, lat = _data$results$0$geome.lat, lng = _data$results$0$geome.lng;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(createProducer(_objectSpread({\n              address: \"\".concat(values.address, \", \").concat(values.number),\n              city: values.city,\n              state: values.state\n            }, userValues, {\n              latitude: lat,\n              longitude: lng\n            })));\n\n          case 11:\n            setStep(4);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var createProducer = function createProducer(body) {\n    var res, data;\n    return _regeneratorRuntime.async(function createProducer$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://api.organis8.com.br/api/produtores', {\n              method: 'POST',\n              body: _JSON$stringify(body)\n            }));\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], _Promise);\n  };\n\n  switch (step) {\n    case 0:\n      return __jsx(RegisterForm, {\n        profile: \"producer\",\n        onSubmit: handleUserSubmit\n      });\n\n    case 1:\n      return __jsx(ConfirmationChoice, {\n        profile: \"producer\",\n        values: userValues,\n        onSubmit: handleConfimationChoice\n      });\n\n    case 2:\n      return __jsx(Confirmation, {\n        profile: \"producer\",\n        confirmationChoice: confirmationChoice,\n        onSubmit: handleConfimation\n      });\n\n    case 3:\n      return __jsx(AddressForm, {\n        profile: \"producer\",\n        loading: loading,\n        values: userValues,\n        onSubmit: handleAddressSubmit\n      });\n\n    case 4:\n      return __jsx(RegisterSuccess, null);\n  }\n};\n\nexport default UpdateProducer;","map":null,"metadata":{},"sourceType":"module"}