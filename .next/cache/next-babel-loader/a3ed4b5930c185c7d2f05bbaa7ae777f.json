{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\nvar SignupProducer = function SignupProducer() {\n  var _useState = useState(0),\n      step = _useState[0],\n      setStep = _useState[1];\n\n  var _useState2 = useState(null),\n      userValues = _useState2[0],\n      setUserValues = _useState2[1];\n\n  var _useState3 = useState(null),\n      confirmationChoice = _useState3[0],\n      setConfirmationChoice = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      invalidCode = _useState5[0],\n      setInvalid = _useState5[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (router.query.notFound) {\n      setStep(-1);\n    }\n  }, [router.query]);\n\n  var handleUserSubmit = function handleUserSubmit(values) {\n    setUserValues(values);\n    setStep(1);\n  };\n\n  var handleConfimationChoice = function handleConfimationChoice(choice) {\n    return _regeneratorRuntime.async(function handleConfimationChoice$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setConfirmationChoice(choice);\n            _context.prev = 1;\n            setLoading(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(sendConfirmation(choice));\n\n          case 5:\n            setLoading(false);\n            setStep(2);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], _Promise);\n  };\n\n  var handleConfimation = function handleConfimation(value) {\n    var email, phone, res;\n    return _regeneratorRuntime.async(function handleConfimation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = userValues.email, phone = userValues.phone;\n            setLoading(true);\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(fetch(\"\".concat(process.env.API_URL, \"/api/confirmation/verify\"), {\n              method: 'POST',\n              body: _JSON$stringify({\n                target: confirmationChoice === 'email' ? email : \"+55\".concat(phone.replace(/\\D/g, '')),\n                code: value\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 5:\n            res = _context2.sent;\n            setLoading(false);\n\n            if (res.status === 200) {\n              setStep(3);\n            } else {\n              setInvalid(true);\n            }\n\n            _context2.next = 14;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](2);\n            setLoading(false);\n            console.log(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 10]], _Promise);\n  };\n};\n\nexport default SignupProducer;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/pages/signup/producer.tsx"],"names":["useState","useEffect","useRouter","SignupProducer","step","setStep","userValues","setUserValues","confirmationChoice","setConfirmationChoice","loading","setLoading","invalidCode","setInvalid","router","query","notFound","handleUserSubmit","values","handleConfimationChoice","choice","sendConfirmation","handleConfimation","value","email","phone","fetch","process","env","API_URL","method","body","target","replace","code","headers","res","status","console","log"],"mappings":"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","sourcesContent":["import RegisterForm from \"../../components/Register/RegisterForm\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\r\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\r\nimport AddressForm from \"../../components/Register/AddressForm/AddressForm\";\r\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\r\nimport { useRouter } from \"next/router\";\r\nimport ProducerNotFound from \"../../components/Register/ProducerNotFound/ProducerNotFound\";\r\n\r\nconst SignupProducer = () => {\r\n    const [step, setStep] = useState(0)\r\n    const [userValues, setUserValues] = useState(null)\r\n    const [confirmationChoice, setConfirmationChoice] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [invalidCode, setInvalid] = useState(false);\r\n    const router = useRouter()\r\n\r\n\r\n    useEffect(() => {\r\n        if (router.query.notFound) {\r\n            setStep(-1);\r\n        }\r\n    }, [router.query])\r\n    const handleUserSubmit = (values) => {\r\n        setUserValues(values)\r\n        setStep(1)\r\n    }\r\n\r\n    const handleConfimationChoice = async (choice) => {\r\n        setConfirmationChoice(choice)\r\n        try {\r\n            setLoading(true)\r\n            await sendConfirmation(choice)\r\n            setLoading(false)\r\n            setStep(2)\r\n        } catch (e) {\r\n            setLoading(false)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleConfimation = async (value) => {\r\n        const { email, phone } = userValues;\r\n        setLoading(true)\r\n        try {\r\n            const res = await fetch(`${process.env.API_URL}/api/confirmation/verify`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(\r\n                        {\r\n                            target: confirmationChoice === 'email' ? email : `+55${phone.replace(/\\D/g, '')}`,\r\n                            code: value\r\n                        }),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n\r\n                })\r\n            setLoading(false);\r\n            if (res.status === 200) {\r\n                setStep(3)\r\n            } else {\r\n                setInvalid(true);\r\n            }\r\n\r\n        } catch (e) {\r\n\r\n            setLoading(false);\r\n\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    \r\n  \r\n\r\n\r\n}\r\nexport default SignupProducer"]},"metadata":{},"sourceType":"module"}