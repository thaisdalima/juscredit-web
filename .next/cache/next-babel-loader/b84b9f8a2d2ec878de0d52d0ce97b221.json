{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Thais Linda\\\\juscredit-web\\\\pages\\\\signup\\\\user.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport RegisterForm from \"../../components/Register/RegisterForm\";\nimport { useState } from \"react\";\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\n\nvar SignupUser = function SignupUser() {\n  var _useState = useState(0),\n      step = _useState[0],\n      setStep = _useState[1];\n\n  var _useState2 = useState(null),\n      userValues = _useState2[0],\n      setUserValues = _useState2[1];\n\n  var _useState3 = useState(null),\n      confirmationChoice = _useState3[0],\n      setConfirmationChoice = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var handleUserSubmit = function handleUserSubmit(values) {\n    setUserValues(values);\n    setStep(1);\n  };\n\n  var handleConfimationChoice = function handleConfimationChoice(choice) {\n    setConfirmationChoice(choice);\n    setStep(2);\n  };\n\n  var handleConfimation = function handleConfimation(value) {\n    return _regeneratorRuntime.async(function handleConfimation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(createUser(_objectSpread({}, userValues)));\n\n          case 3:\n            setStep(3);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var createUser = function createUser(body) {\n    var res, data;\n    return _regeneratorRuntime.async(function createUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch('', {\n              method: 'POST',\n              body: _JSON$stringify(body)\n            }));\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], _Promise);\n  };\n\n  switch (step) {\n    case 0:\n      return __jsx(RegisterForm, {\n        profile: \"user\",\n        onSubmit: handleUserSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n\n    case 1:\n      return __jsx(ConfirmationChoice, {\n        profile: \"user\",\n        values: userValues,\n        onSubmit: handleConfimationChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n\n    case 2:\n      return __jsx(Confirmation, {\n        loading: loading,\n        profile: \"user\",\n        confirmationChoice: confirmationChoice,\n        onSubmit: handleConfimation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n\n    case 3:\n      return __jsx(RegisterSuccess, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n  }\n};\n\nexport default SignupUser;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/pages/signup/user.tsx"],"names":["RegisterForm","useState","ConfirmationChoice","Confirmation","RegisterSuccess","SignupUser","step","setStep","userValues","setUserValues","confirmationChoice","setConfirmationChoice","loading","setLoading","handleUserSubmit","values","handleConfimationChoice","choice","handleConfimation","value","createUser","body","fetch","method","res","json","data","console","error"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,wCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,kBAAP,MAA+B,iEAA/B;AACA,OAAOC,YAAP,MAAyB,qDAAzB;AACA,OAAOC,eAAP,MAA4B,2DAA5B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACGJ,QAAQ,CAAC,CAAD,CADX;AAAA,MACdK,IADc;AAAA,MACRC,OADQ;;AAAA,mBAEeN,QAAQ,CAAC,IAAD,CAFvB;AAAA,MAEdO,UAFc;AAAA,MAEFC,aAFE;;AAAA,mBAG+BR,QAAQ,CAAC,IAAD,CAHvC;AAAA,MAGdS,kBAHc;AAAA,MAGMC,qBAHN;;AAAA,mBAISV,QAAQ,CAAC,KAAD,CAJjB;AAAA,MAIdW,OAJc;AAAA,MAILC,UAJK;;AAMrB,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;AACjCN,IAAAA,aAAa,CAACM,MAAD,CAAb;AACAR,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,MAAMS,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,MAAD,EAAY;AACxCN,IAAAA,qBAAqB,CAACM,MAAD,CAArB;AACAV,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,MAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AACtBN,YAAAA,UAAU,CAAC,IAAD,CAAV;AADsB;AAAA,6CAEhBO,UAAU,mBACTZ,UADS,EAFM;;AAAA;AAKtBD,YAAAA,OAAO,CAAC,CAAD,CAAP;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAOA,MAAMa,UAAU,GAAG,SAAbA,UAAa,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEOC,KAAK,CAAC,EAAD,EAAK;AAAEC,cAAAA,MAAM,EAAE,MAAV;AAAkBF,cAAAA,IAAI,EAAE,gBAAeA,IAAf;AAAxB,aAAL,CAFZ;;AAAA;AAELG,YAAAA,GAFK;AAAA;AAAA,6CAGQA,GAAG,CAACC,IAAJ,EAHR;;AAAA;AAGLC,YAAAA,IAHK;AAAA,8CAIJA,IAJI;;AAAA;AAAA;AAAA;AAOXC,YAAAA,OAAO,CAACC,KAAR;;AAPW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAWA,UAAQtB,IAAR;AAEI,SAAK,CAAL;AACI,aAAO,MAAC,YAAD;AAAc,QAAA,OAAO,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAEQ,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAC,kBAAD;AAAoB,QAAA,OAAO,EAAC,MAA5B;AAAmC,QAAA,MAAM,EAAEN,UAA3C;AAAuD,QAAA,QAAQ,EAAEQ,uBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAC,YAAD;AAAc,QAAA,OAAO,EAAEJ,OAAvB;AAAgC,QAAA,OAAO,EAAC,MAAxC;AAA+C,QAAA,kBAAkB,EAAEF,kBAAnE;AAAuF,QAAA,QAAQ,EAAEQ,iBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AATR;AAYH,CA9CD;;AA+CA,eAAeb,UAAf","sourcesContent":["import RegisterForm from \"../../components/Register/RegisterForm\";\r\nimport { useState } from \"react\";\r\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\r\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\r\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\r\n\r\nconst SignupUser = () => {\r\n    const [step, setStep] = useState(0)\r\n    const [userValues, setUserValues] = useState(null)\r\n    const [confirmationChoice, setConfirmationChoice] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleUserSubmit = (values) => {\r\n        setUserValues(values)\r\n        setStep(1)\r\n    }\r\n\r\n    const handleConfimationChoice = (choice) => {\r\n        setConfirmationChoice(choice)\r\n        setStep(2)\r\n    }\r\n\r\n    const handleConfimation = async (value) => {\r\n        setLoading(true)\r\n        await createUser({\r\n            ...userValues\r\n        })\r\n        setStep(3)\r\n    }\r\n    const createUser = async (body) => {\r\n        try {\r\n            const res = await fetch('', { method: 'POST', body: JSON.stringify(body) })\r\n            const data = await res.json();\r\n            return data;\r\n        }\r\n        catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    switch (step) {\r\n\r\n        case 0:\r\n            return <RegisterForm profile=\"user\" onSubmit={handleUserSubmit} />\r\n        case 1:\r\n            return <ConfirmationChoice profile=\"user\" values={userValues} onSubmit={handleConfimationChoice} />\r\n        case 2:\r\n            return <Confirmation loading={loading} profile=\"user\" confirmationChoice={confirmationChoice} onSubmit={handleConfimation} />\r\n        case 3:\r\n            return <RegisterSuccess />\r\n    }\r\n\r\n}\r\nexport default SignupUser"]},"metadata":{},"sourceType":"module"}