{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport './BePart.scss';\nimport Button from '../../components/Button/Button';\nimport StyledInput from '../../components/Input/Input';\nimport { useState } from 'react';\nimport { Masks } from '../../utils/mask';\nimport Link from 'next/link';\n\nconst BePart = ({\n  producers\n}) => {\n  const {\n    0: documentInput,\n    1: setDocument\n  } = useState('');\n  const {\n    0: mask,\n    1: setMask\n  } = useState(Masks.CPF);\n  const {\n    0: shouldUpdateMask,\n    1: setShouldUpdateMask\n  } = useState(false);\n  const {\n    0: userNotFound,\n    1: setUserNotFound\n  } = useState(false);\n\n  const handleChange = e => {\n    if (shouldUpdateMask) {\n      setMask(Masks.CNPJ);\n      setShouldUpdateMask(false);\n    }\n\n    setDocument(e.target.value);\n  };\n\n  const beforeMaskedValueChange = values => {\n    if (values.selection) {\n      const {\n        end\n      } = values.selection;\n\n      if (end === 14) {\n        setShouldUpdateMask(true);\n      }\n\n      if (mask === Masks.CNPJ && end === 13) {\n        setMask(Masks.CPF);\n      }\n    }\n\n    return _objectSpread({}, values);\n  };\n\n  const validateDocument = () => {\n    if (producers) {\n      const producer = producers.find(({\n        document\n      }) => document === documentInput);\n\n      if (producer) {} else {\n        setUserNotFound(true);\n      }\n    }\n  };\n\n  return __jsx(\"main\", {\n    className: \"be-part-container\"\n  }, __jsx(\"img\", {\n    className: \"bg-left\",\n    src: \"/colored-products-left.svg\"\n  }), __jsx(\"img\", {\n    className: \"bg-right\",\n    src: \"/be-part/bg.svg\"\n  }), __jsx(\"div\", null, __jsx(\"h1\", null, \"Insira seu CPF ou CNPJ abaixo\"), __jsx(\"label\", null, \"Se voce\\u0302 \\xE9 produtor e conhece o cadastro oficial do Ministe\\u0301rio (MAPA) e acha que ja\\u0301 faz parte, por favor, insira seu CPF ou CNPJ:\"), __jsx(StyledInput, {\n    mask: mask,\n    beforeMaskedValueChange: beforeMaskedValueChange,\n    placeholder: \"Ex: 111.111.111-11...\",\n    value: documentInput,\n    onChange: handleChange,\n    className: userNotFound && 'not-found'\n  }), userNotFound && __jsx(\"span\", {\n    className: \"user-not-found\"\n  }, \"Cadastro n\\xE3o encontrado\"), __jsx(Button, {\n    color: \"primary\",\n    onClick: validateDocument\n  }, \"Validar cadastro \"), __jsx(Link, {\n    href: \"/signup/producer\"\n  }, __jsx(\"a\", null, \"N\\xE3o estou cadastrado >\"))), __jsx(\"img\", {\n    className: \"producer\",\n    src: \"/be-part/producer.svg\"\n  }));\n};\n\nexport default BePart;","map":null,"metadata":{},"sourceType":"module"}