{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thais Linda\\\\juscredit-web\\\\components\\\\Modal\\\\Modal.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends React.Component {\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if (!this.props.show) {\n      return null;\n    } // The gray background\n\n\n    const backdropStyle = {\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    }; // The modal \"window\"\n\n    const modalStyle = {\n      backgroundColor: '#fff',\n      borderRadius: 5,\n      maxWidth: 500,\n      minHeight: 300,\n      margin: '0 auto',\n      padding: 30\n    };\n\n    __jsx(Modal, {\n      show: this.state.isOpen,\n      onClose: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n\n    return __jsx(\"div\", {\n      className: \"backdrop\",\n      style: {\n        backdropStyle\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"modal\",\n      style: {\n        modalStyle\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.children, __jsx(\"div\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: this.props.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node\n};\nexport default Modal;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/components/Modal/Modal.tsx"],"names":["React","PropTypes","Modal","Component","render","props","show","backdropStyle","position","top","bottom","left","right","backgroundColor","padding","modalStyle","borderRadius","maxWidth","minHeight","margin","state","isOpen","toggleModal","children","onClose","propTypes","func","isRequired","bool","node"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AACP;AACA,QAAG,CAAC,KAAKC,KAAL,CAAWC,IAAf,EAAqB;AACnB,aAAO,IAAP;AACD,KAJM,CAMP;;;AACA,UAAMC,aAAa,GAAG;AACpBC,MAAAA,QAAQ,EAAE,OADU;AAEpBC,MAAAA,GAAG,EAAE,CAFe;AAGpBC,MAAAA,MAAM,EAAE,CAHY;AAIpBC,MAAAA,IAAI,EAAE,CAJc;AAKpBC,MAAAA,KAAK,EAAE,CALa;AAMpBC,MAAAA,eAAe,EAAE,iBANG;AAOpBC,MAAAA,OAAO,EAAE;AAPW,KAAtB,CAPO,CAiBP;;AACA,UAAMC,UAAU,GAAG;AACjBF,MAAAA,eAAe,EAAE,MADA;AAEjBG,MAAAA,YAAY,EAAE,CAFG;AAGjBC,MAAAA,QAAQ,EAAE,GAHO;AAIjBC,MAAAA,SAAS,EAAE,GAJM;AAKjBC,MAAAA,MAAM,EAAE,QALS;AAMjBL,MAAAA,OAAO,EAAE;AANQ,KAAnB;;AASA,UAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKM,KAAL,CAAWC,MAAxB;AACA,MAAA,OAAO,EAAE,KAAKC,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAACf,QAAAA;AAAD,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAACQ,QAAAA;AAAD,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWkB,QADd,EAGE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWmB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAHF,CADF,CADF;AAaD;;AA5CiC;;AA+CpCtB,KAAK,CAACuB,SAAN,GAAkB;AAChBD,EAAAA,OAAO,EAAEvB,SAAS,CAACyB,IAAV,CAAeC,UADR;AAEhBrB,EAAAA,IAAI,EAAEL,SAAS,CAAC2B,IAFA;AAGhBL,EAAAA,QAAQ,EAAEtB,SAAS,CAAC4B;AAHJ,CAAlB;AAMA,eAAe3B,KAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends React.Component {\r\n  render() {\r\n    // Render nothing if the \"show\" prop is false\r\n    if(!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    // The gray background\r\n    const backdropStyle = {\r\n      position: 'fixed',\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: 'rgba(0,0,0,0.3)',\r\n      padding: 50\r\n    };\r\n\r\n    // The modal \"window\"\r\n    const modalStyle = {\r\n      backgroundColor: '#fff',\r\n      borderRadius: 5,\r\n      maxWidth: 500,\r\n      minHeight: 300,\r\n      margin: '0 auto',\r\n      padding: 30\r\n    };\r\n\r\n    <Modal show={this.state.isOpen}\r\n    onClose={this.toggleModal}></Modal>\r\n\r\n    return (\r\n      <div className=\"backdrop\" style={{backdropStyle}}>\r\n        <div className=\"modal\" style={{modalStyle}}>\r\n          {this.props.children}\r\n\r\n          <div className=\"footer\">\r\n            <button onClick={this.props.onClose}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}