{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState, Fragment } from \"react\";\nimport { mapStyleOptions, mapDefaultOptions } from \"./options\";\nimport './InteractiveMap.scss';\nimport dynamic from 'next/dynamic';\nimport PartnerPopup from \"./PartnerPopup/PartnerPopup\";\nimport StateDetails from \"./StateDetails/StateDetails\";\nimport PartnerAutoSuggest from \"./PartnerAutosuggest/PartnerAutoSuggest\";\nimport MarkerClusterer from '@google/markerclustererplus';\nvar OverlayViewContainer = dynamic(function () {\n  return import('./OverlayViewContainer/OverlayViewContainer');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./OverlayViewContainer/OverlayViewContainer')];\n    },\n    modules: ['./OverlayViewContainer/OverlayViewContainer']\n  }\n});\n\nvar InteractiveMap = function InteractiveMap(_ref) {\n  var data = _ref.data,\n      onFilterChange = _ref.onFilterChange;\n  var map;\n\n  var _useState = useState([]),\n      markers = _useState[0],\n      setMarkers = _useState[1];\n\n  var _useState2 = useState(null),\n      mapRef = _useState2[0],\n      setMapRef = _useState2[1];\n\n  var _useState3 = useState(null),\n      showingPartner = _useState3[0],\n      setShowingPartner = _useState3[1];\n\n  var _useState4 = useState(null),\n      currentMarkerPosition = _useState4[0],\n      setCurrentMarkerPosition = _useState4[1];\n\n  var _useState5 = useState(null),\n      entityType = _useState5[0],\n      setEntityType = _useState5[1];\n\n  var _useState6 = useState(null),\n      productionScope = _useState6[0],\n      setProductionScope = _useState6[1];\n\n  var _useState7 = useState(false),\n      loaded = _useState7[0],\n      setLoaded = _useState7[1];\n\n  var _useState8 = useState(null),\n      selectedState = _useState8[0],\n      setSelectedState = _useState8[1];\n\n  var _useState9 = useState(null),\n      features = _useState9[0],\n      setFeatures = _useState9[1];\n\n  var _useState10 = useState(null),\n      selectedPartner = _useState10[0],\n      setSelectedPartner = _useState10[1];\n\n  var _useState11 = useState([]),\n      clusters = _useState11[0],\n      setClusters = _useState11[1];\n\n  useEffect(function () {\n    initMap();\n  }, []);\n  useEffect(function () {\n    if (selectedPartner) {\n      var instancedMap = map ? map : mapRef;\n      var marker = markers.find(function (marker) {\n        return marker.getTitle() === selectedPartner.fantasyName;\n      });\n\n      if (marker) {\n        instancedMap.setZoom(13);\n        instancedMap.setCenter(marker.getPosition());\n      }\n    }\n  }, [selectedPartner]);\n  useEffect(function () {\n    if (data) {\n      generateMarkers(data);\n    }\n  }, [data]);\n\n  var selectPartner = function selectPartner(partner) {\n    setSelectedPartner(partner);\n  };\n\n  var clearMarkers = function clearMarkers() {\n    clusters.forEach(function (cluster) {\n      var clusterMarkers = cluster.getMarkers();\n      cluster.removeMarkers(clusterMarkers);\n      clusterMarkers.forEach(function (m) {\n        return m.setMap(undefined);\n      });\n    });\n    setClusters([]);\n    markers.forEach(function (marker) {\n      return marker.setMap(undefined);\n    });\n    setMarkers([]);\n  };\n\n  var generateMarkers = function generateMarkers(data) {\n    clearMarkers();\n    var newMarkers = {};\n    var allMarkers = [];\n    data.forEach(function (partner) {\n      var marker = new google.maps.Marker({\n        position: new google.maps.LatLng(partner.latitude, partner.longitude),\n        icon: \"markers/\".concat(String(partner.entityType).toLowerCase() + (partner.certified ? '-certified' : ''), \".svg\"),\n        map: map,\n        clickable: true,\n        title: partner.fantasyName\n      });\n      marker.addListener('click', function () {\n        selectPartner(partner);\n        setShowingPartner(partner);\n      });\n      marker.addListener('mouseover', function () {\n        setCurrentMarkerPosition(marker.getPosition());\n        setShowingPartner(partner);\n      });\n      marker.setMap(loaded ? mapRef : map);\n\n      if (!newMarkers[partner.entityType]) {\n        newMarkers[partner.entityType] = [];\n      }\n\n      newMarkers[partner.entityType].push(marker);\n      allMarkers.push(marker);\n    });\n    var allClusters = [];\n\n    _Object$keys(newMarkers).forEach(function (entityType) {\n      allClusters.push(new MarkerClusterer(loaded ? mapRef : map, newMarkers[entityType], {\n        imagePath: \"/clusterers/\".concat(entityType.toLowerCase()),\n        styles: [{\n          height: 50,\n          width: 50,\n          url: \"/clusterers/\".concat(entityType.toLowerCase(), \"1.png\"),\n          textColor: 'white',\n          fontWeight: 'bold',\n          anchorText: [19, 1]\n        }, {\n          height: 50,\n          width: 50,\n          url: \"/clusterers/\".concat(entityType.toLowerCase(), \"2.png\"),\n          textColor: 'white',\n          fontWeight: 'bold',\n          anchorText: [19, 1]\n        }, {\n          height: 50,\n          width: 50,\n          url: \"/clusterers/\".concat(entityType.toLowerCase(), \"3.png\"),\n          textColor: 'white',\n          fontWeight: 'bold',\n          anchorText: [19, 1]\n        }, {\n          height: 78,\n          width: 77,\n          url: \"/clusterers/\".concat(entityType.toLowerCase(), \"4.png\"),\n          textColor: 'white',\n          fontWeight: 'bold',\n          anchorText: [19, 1]\n        }, {\n          height: 90,\n          width: 89,\n          url: \"/clusterers/\".concat(entityType.toLowerCase(), \"5.png\"),\n          textColor: 'white',\n          fontWeight: 'bold',\n          anchorText: [19, 1]\n        }]\n      }));\n    });\n\n    setClusters(allClusters);\n    setLoaded(true);\n    setMarkers(allMarkers);\n  };\n\n  var initMap = function initMap() {\n    var mapType = new google.maps.StyledMapType(mapStyleOptions, {\n      name: \"Organis8\"\n    });\n    map = new google.maps.Map(document.getElementById('mapCanvas'), mapDefaultOptions(new google.maps.LatLng(-13.7017905, -59.6996757)));\n    setMapRef(map);\n    map.mapTypes.set('organisMap', mapType);\n    map.setMapTypeId('organisMap');\n  };\n\n  var selectState = function selectState(e) {\n    var state, map, geoJson;\n    return _regeneratorRuntime.async(function selectState$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            state = e.target.value;\n            setSelectedState(state);\n            map = mapRef;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(\"/geoJSON/\".concat(state.toLowerCase(), \".json\")));\n\n          case 5:\n            geoJson = _context.sent;\n            _context.t0 = setFeatures;\n            _context.t1 = map.data;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(geoJson.json());\n\n          case 10:\n            _context.t2 = _context.sent;\n            _context.t3 = _context.t1.addGeoJson.call(_context.t1, _context.t2);\n            (0, _context.t0)(_context.t3);\n            map.data.setStyle({\n              fillColor: 'transparent  ',\n              strokeColor: '#6CB648',\n              strokeWeight: 2\n            });\n            map.setCenter(new google.maps.LatLng(-22.9549806, -51.0232348));\n            map.setZoom(7);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var handleEntityType = function handleEntityType(e) {\n    var filter = e.target.value === entityType ? null : e.target.value;\n    setEntityType(filter);\n    onFilterChange({\n      entityType: filter,\n      productionScope: productionScope\n    });\n  };\n\n  var handleProductionScope = function handleProductionScope(e) {\n    var filter = e.target.value === productionScope ? null : e.target.value;\n    setProductionScope(filter);\n    onFilterChange({\n      productionScope: filter,\n      entityType: entityType\n    });\n  };\n\n  var handleGoBack = function handleGoBack() {\n    var instancedMap = map ? map : mapRef;\n    setSelectedState(null);\n    instancedMap.data.remove(features[0]);\n    instancedMap.setZoom(5);\n    instancedMap.setCenter(new google.maps.LatLng(-13.7017905, -59.6996757));\n  };\n\n  var handlePopupRef = function handlePopupRef(ref) {\n    if (ref) {\n      google.maps.OverlayView.preventMapHitsAndGesturesFrom(ref);\n    }\n  };\n\n  var handlePopupMouseLeave = function handlePopupMouseLeave() {\n    setShowingPartner(null);\n  };\n\n  return __jsx(\"div\", {\n    className: \"interactive-map-container\"\n  }, __jsx(\"div\", {\n    className: \"find-partners-card\"\n  }, selectedState ? __jsx(StateDetails, {\n    stateDetail: selectState,\n    onGoBack: handleGoBack\n  }) : __jsx(Fragment, null, __jsx(PartnerAutoSuggest, {\n    partners: data,\n    onSelect: selectPartner\n  }), __jsx(\"h2\", null, \"Filtrar resultados por:\"), __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      flexDirection: 'column',\n      display: 'flex'\n    }\n  }, __jsx(\"select\", {\n    className: \"state-select\",\n    onChange: selectState\n  }, __jsx(\"option\", null, \"Selecionar estado\"), __jsx(\"option\", {\n    value: \"SP\"\n  }, \"S\\xE3o Paulo\"))), __jsx(\"div\", {\n    style: {\n      flexDirection: 'column',\n      display: 'flex'\n    }\n  }, __jsx(\"strong\", null, \"Tipo de entidade\"), __jsx(\"div\", {\n    className: \"radio ocs\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleEntityType,\n    checked: entityType === \"OCS\",\n    value: \"OCS\"\n  }), __jsx(\"label\", null, \"OCS\"), __jsx(\"img\", {\n    src: \"/ocs.svg\"\n  })), __jsx(\"div\", {\n    className: \"radio opac\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleEntityType,\n    checked: entityType === \"CERT\",\n    value: \"CERT\"\n  }), __jsx(\"label\", null, \"CERT\"), __jsx(\"img\", {\n    src: \"/cert.svg\"\n  })), __jsx(\"div\", {\n    className: \"radio cert\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleEntityType,\n    checked: entityType === \"OPACS\",\n    value: \"OPACS\"\n  }), __jsx(\"label\", null, \"OPACS\"), __jsx(\"img\", {\n    src: \"/opacs.svg\"\n  }))), __jsx(\"div\", {\n    style: {\n      flexDirection: 'column',\n      display: 'flex',\n      marginTop: 16\n    }\n  }, __jsx(\"strong\", null, \"Escopo de produ\\xE7\\xE3o\"), __jsx(\"div\", {\n    className: \"radio\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleProductionScope,\n    checked: productionScope === \"EXT\",\n    value: \"EXT\"\n  }), __jsx(\"label\", null, __jsx(\"strong\", null, \"EXT\"), \" - Extrativismo\")), __jsx(\"div\", {\n    className: \"radio\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleProductionScope,\n    checked: productionScope === \"PPA\",\n    value: \"PPA\"\n  }), __jsx(\"label\", null, __jsx(\"strong\", null, \"PPA\"), \" - Produ\\xE7\\xE3o prim\\xE1ria animal\")), __jsx(\"div\", {\n    className: \"radio\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleProductionScope,\n    checked: productionScope === \"PPV\",\n    value: \"PPV\"\n  }), __jsx(\"label\", null, __jsx(\"strong\", null, \"PPV\"), \" - Produ\\xE7\\xE3o prim\\xE1ria vegetal\")), __jsx(\"div\", {\n    className: \"radio\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleProductionScope,\n    checked: productionScope === \"POA\",\n    value: \"POA\"\n  }), __jsx(\"label\", null, __jsx(\"strong\", null, \"POA\"), \" - Processamento animal\")), __jsx(\"div\", {\n    className: \"radio\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleProductionScope,\n    checked: productionScope === \"POV\",\n    value: \"POV\"\n  }), __jsx(\"label\", null, __jsx(\"strong\", null, \"POV\"), \" - Processamento vegetal\")), __jsx(\"div\", {\n    className: \"radio\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleProductionScope,\n    checked: productionScope === \"PIA\",\n    value: \"PIA\"\n  }), __jsx(\"label\", null, __jsx(\"strong\", null, \"PIA\"), \" - Insumos agr\\xEDcolas\")))))), __jsx(\"div\", {\n    id: \"mapCanvas\",\n    style: {\n      height: '749px'\n    }\n  }, mapRef && __jsx(OverlayViewContainer, {\n    map: mapRef,\n    selector: \"#overlay\",\n    position: currentMarkerPosition\n  }, showingPartner && __jsx(PartnerPopup, {\n    setRef: handlePopupRef,\n    onMouseLeave: handlePopupMouseLeave,\n    partner: showingPartner\n  }))));\n};\n\nexport default InteractiveMap;","map":null,"metadata":{},"sourceType":"module"}