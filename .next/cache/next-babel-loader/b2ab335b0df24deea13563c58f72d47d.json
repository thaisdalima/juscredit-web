{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../RegisterForm.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport StyledInput from '../../Input/Input';\nimport Button from '../../Button/Button';\nconst stringMap = new Map([['user', {\n  cardTitle: 'Cadastrando meus dados'\n}], ['producer', {\n  cardTitle: 'Cadastrando meus dados'\n}], ['update-producer', {\n  cardTitle: 'Atualizando os meus dados'\n}]]);\n\nconst validate = values => {\n  let errors = {};\n  return errors;\n};\n\nconst AddressForm = ({\n  values,\n  loading,\n  onSubmit,\n  profile,\n  producer = null\n}) => {\n  const {\n    cardTitle\n  } = stringMap.get(profile);\n\n  const handleCepChange = async (e, setValues, currentValues) => {\n    const cep = e.target.value;\n\n    if (cep && !cep.includes('_')) {\n      const res = await fetch(`https://viacep.com.br/ws/${cep.replace(/\\D/g, '')}/json/`);\n      const data = await res.json();\n      setValues(_objectSpread(_objectSpread({}, currentValues), {}, {\n        zipcode: cep,\n        address: data.logradouro,\n        city: data.localidade,\n        state: data.uf\n      }));\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"card\"\n  }, __jsx(\"div\", {\n    className: \"title-container\"\n  }, __jsx(\"h1\", {\n    className: \"card-title\"\n  }, cardTitle)), __jsx(\"div\", {\n    className: \"card-content\"\n  }, __jsx(\"label\", null, \"Confirmar dados > Endere\\xE7o comercial\"), __jsx(Formik, {\n    initialValues: {\n      address: '',\n      zipcode: '',\n      number: '',\n      complement: '',\n      city: '',\n      state: ''\n    },\n    validate: validate,\n    onSubmit: onSubmit\n  }, ({\n    errors,\n    values,\n    handleChange,\n    setValues,\n    setTouched\n  }) => {\n    return __jsx(Form, {\n      className: \"form-container\"\n    }, __jsx(\"h2\", {\n      className: \"form-title\"\n    }, \"Para finalizar, basta atualizar os dados do seu enderec\\u0327o comercial.\"), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"CEP\"), __jsx(Field, {\n      name: \"zipcode\",\n      mask: \"99999-999\",\n      placeholder: \"CEP\",\n      onChange: e => {\n        handleCepChange(e, setValues, values);\n        handleChange('zipcode')(e);\n      },\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"zipcode\",\n      component: \"span\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Endere\\xE7o\"), __jsx(Field, {\n      name: \"address\",\n      mask: null,\n      placeholder: \"Endere\\xE7o\",\n      component: StyledInput,\n      disabled: true\n    }), __jsx(ErrorMessage, {\n      name: \"address\",\n      component: \"span\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"N\\xFAmero\"), __jsx(Field, {\n      name: \"number\",\n      placeholder: \"N\\xFAmero\",\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"number\",\n      component: \"span\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Complemento\"), __jsx(Field, {\n      name: \"complement\",\n      placeholder: \"Complemento\",\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"complement\",\n      component: \"span\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Cidade\"), __jsx(Field, {\n      name: \"city\",\n      mask: null,\n      placeholder: \"Cidade\",\n      component: StyledInput,\n      disabled: true\n    }), __jsx(ErrorMessage, {\n      name: \"city\",\n      component: \"span\"\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Estado\"), __jsx(Field, {\n      name: \"state\",\n      mask: null,\n      placeholder: \"Estado\",\n      component: StyledInput,\n      disabled: true\n    }), __jsx(ErrorMessage, {\n      name: \"state\",\n      component: \"span\"\n    })), __jsx(\"div\", {\n      className: \"button-container\"\n    }, __jsx(Button, {\n      color: \"secundary\",\n      type: \"submit\",\n      tabIndex: 1,\n      loading: loading.toString(),\n      disabled: Object.keys(errors).length > 0\n    }, \"Avan\\xE7ar\")));\n  })));\n};\n\nexport default AddressForm;","map":null,"metadata":{},"sourceType":"module"}