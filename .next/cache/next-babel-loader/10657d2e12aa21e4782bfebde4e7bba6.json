{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Autosuggest from \"react-autosuggest\";\nimport { useState } from \"react\";\nimport './Autosuggest.scss';\n\nvar PartnerAutoSuggest = function PartnerAutoSuggest(_ref) {\n  var partners = _ref.partners,\n      onSelect = _ref.onSelect;\n\n  var _useState = useState([]),\n      suggestions = _useState[0],\n      setSuggestions = _useState[1];\n\n  var _useState2 = useState(''),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var getSuggestionValue = function getSuggestionValue(suggestion) {\n    return suggestion.fantasyName;\n  };\n\n  var getSuggestions = function getSuggestions(value) {\n    var inputValue = value.toLowerCase();\n    var inputLength = inputValue.length;\n    return inputLength === 0 ? [] : partners.filter(function (partner) {\n      return partner.fantasyName.toLowerCase().slice(0, inputLength) === inputValue;\n    });\n  };\n\n  var renderSuggestion = function renderSuggestion(suggestion) {\n    return __jsx(\"div\", {\n      className: \"suggestion\"\n    }, suggestion.fantasyName);\n  };\n\n  var onSuggestionsFetchRequested = function onSuggestionsFetchRequested(_ref2) {\n    var value = _ref2.value;\n    setSuggestions(getSuggestions(value));\n  };\n\n  var onChange = function onChange(event, _ref3) {\n    var newValue = _ref3.newValue;\n    return setValue(newValue);\n  };\n\n  var inputProps = {\n    placeholder: 'Buscar no mapa',\n    value: value,\n    onChange: onChange\n  };\n\n  var onSuggestionSelected = function onSuggestionSelected(e, _ref4) {\n    var suggestion = _ref4.suggestion;\n    onSelect(suggestion);\n  };\n\n  return __jsx(Autosuggest, {\n    suggestions: suggestions,\n    onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n    getSuggestionValue: getSuggestionValue,\n    renderSuggestion: renderSuggestion,\n    inputProps: inputProps,\n    onSuggestionSelected: onSuggestionSelected,\n    onSuggestionsClearRequested: function onSuggestionsClearRequested() {\n      return setSuggestions([]);\n    },\n    theme: {\n      input: 'organis-input',\n      suggestionsContainerOpen: 'container-open'\n    }\n  });\n};\n\nexport default PartnerAutoSuggest;","map":null,"metadata":{},"sourceType":"module"}