{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thais Linda\\\\juscredit-web\\\\pages\\\\signup\\\\user.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport RegisterForm from \"../../components/Register/RegisterForm\";\nimport { useState } from \"react\";\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\n\nconst SignupUser = () => {\n  const {\n    0: step,\n    1: setStep\n  } = useState(0);\n  const {\n    0: userValues,\n    1: setUserValues\n  } = useState(null);\n  const {\n    0: confirmationChoice,\n    1: setConfirmationChoice\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const handleUserSubmit = values => {\n    setUserValues(values);\n    setStep(1);\n  };\n\n  const handleConfimationChoice = choice => {\n    setConfirmationChoice(choice);\n    setStep(2);\n  };\n\n  const handleConfimation = async value => {\n    setLoading(true);\n    await createUser(_objectSpread({}, userValues));\n    setStep(3);\n  };\n\n  const createUser = async body => {\n    try {\n      const res = await fetch('', {\n        method: 'POST',\n        body: JSON.stringify(body)\n      });\n      const data = await res.json();\n      return data;\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  switch (step) {\n    case 0:\n      return __jsx(RegisterForm, {\n        profile: \"user\",\n        onSubmit: handleUserSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n\n    case 1:\n      return __jsx(ConfirmationChoice, {\n        profile: \"user\",\n        values: userValues,\n        onSubmit: handleConfimationChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n\n    case 2:\n      return __jsx(Confirmation, {\n        loading: loading,\n        profile: \"user\",\n        confirmationChoice: confirmationChoice,\n        onSubmit: handleConfimation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n\n    case 3:\n      return __jsx(RegisterSuccess, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n  }\n};\n\nexport default SignupUser;","map":{"version":3,"sources":["C:/Users/Thais Linda/juscredit-web/pages/signup/user.tsx"],"names":["RegisterForm","useState","ConfirmationChoice","Confirmation","RegisterSuccess","SignupUser","step","setStep","userValues","setUserValues","confirmationChoice","setConfirmationChoice","loading","setLoading","handleUserSubmit","values","handleConfimationChoice","choice","handleConfimation","value","createUser","body","res","fetch","method","JSON","stringify","data","json","e","console","error"],"mappings":";;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,wCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,kBAAP,MAA+B,iEAA/B;AACA,OAAOC,YAAP,MAAyB,qDAAzB;AACA,OAAOC,eAAP,MAA4B,2DAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAA,OAACS,kBAAD;AAAA,OAAqBC;AAArB,MAA8CV,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMa,gBAAgB,GAAIC,MAAD,IAAY;AACjCN,IAAAA,aAAa,CAACM,MAAD,CAAb;AACAR,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,QAAMS,uBAAuB,GAAIC,MAAD,IAAY;AACxCN,IAAAA,qBAAqB,CAACM,MAAD,CAArB;AACAV,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,QAAMW,iBAAiB,GAAG,MAAOC,KAAP,IAAiB;AACvCN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMO,UAAU,mBACTZ,UADS,EAAhB;AAGAD,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAND;;AAOA,QAAMa,UAAU,GAAG,MAAOC,IAAP,IAAgB;AAC/B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,EAAD,EAAK;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBH,QAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAAxB,OAAL,CAAvB;AACA,YAAMM,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AACA,aAAOD,IAAP;AACH,KAJD,CAKA,OAAOE,CAAP,EAAU;AACNC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ,GATD;;AAWA,UAAQvB,IAAR;AAEI,SAAK,CAAL;AACI,aAAO,MAAC,YAAD;AAAc,QAAA,OAAO,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAEQ,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAC,kBAAD;AAAoB,QAAA,OAAO,EAAC,MAA5B;AAAmC,QAAA,MAAM,EAAEN,UAA3C;AAAuD,QAAA,QAAQ,EAAEQ,uBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAC,YAAD;AAAc,QAAA,OAAO,EAAEJ,OAAvB;AAAgC,QAAA,OAAO,EAAC,MAAxC;AAA+C,QAAA,kBAAkB,EAAEF,kBAAnE;AAAuF,QAAA,QAAQ,EAAEQ,iBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,CAAL;AACI,aAAO,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AATR;AAYH,CA9CD;;AA+CA,eAAeb,UAAf","sourcesContent":["import RegisterForm from \"../../components/Register/RegisterForm\";\r\nimport { useState } from \"react\";\r\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\r\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\r\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\r\n\r\nconst SignupUser = () => {\r\n    const [step, setStep] = useState(0)\r\n    const [userValues, setUserValues] = useState(null)\r\n    const [confirmationChoice, setConfirmationChoice] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleUserSubmit = (values) => {\r\n        setUserValues(values)\r\n        setStep(1)\r\n    }\r\n\r\n    const handleConfimationChoice = (choice) => {\r\n        setConfirmationChoice(choice)\r\n        setStep(2)\r\n    }\r\n\r\n    const handleConfimation = async (value) => {\r\n        setLoading(true)\r\n        await createUser({\r\n            ...userValues\r\n        })\r\n        setStep(3)\r\n    }\r\n    const createUser = async (body) => {\r\n        try {\r\n            const res = await fetch('', { method: 'POST', body: JSON.stringify(body) })\r\n            const data = await res.json();\r\n            return data;\r\n        }\r\n        catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    switch (step) {\r\n\r\n        case 0:\r\n            return <RegisterForm profile=\"user\" onSubmit={handleUserSubmit} />\r\n        case 1:\r\n            return <ConfirmationChoice profile=\"user\" values={userValues} onSubmit={handleConfimationChoice} />\r\n        case 2:\r\n            return <Confirmation loading={loading} profile=\"user\" confirmationChoice={confirmationChoice} onSubmit={handleConfimation} />\r\n        case 3:\r\n            return <RegisterSuccess />\r\n    }\r\n\r\n}\r\nexport default SignupUser"]},"metadata":{},"sourceType":"module"}