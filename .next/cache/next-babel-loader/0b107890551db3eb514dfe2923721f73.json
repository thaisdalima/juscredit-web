{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../RegisterForm.scss';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport StyledInput from '../../Input/Input';\nimport Button from '../../Button/Button';\nvar stringMap = new Map([['user', {\n  cardTitle: 'Cadastrando meus dados'\n}], ['producer', {\n  cardTitle: 'Cadastrando meus dados'\n}], ['update-producer', {\n  cardTitle: 'Atualizando os meus dados'\n}]]);\n\nvar validate = function validate(values) {\n  var errors = {};\n  return errors;\n};\n\nvar AddressForm = function AddressForm(_ref) {\n  var values = _ref.values,\n      loading = _ref.loading,\n      onSubmit = _ref.onSubmit,\n      profile = _ref.profile,\n      _ref$producer = _ref.producer,\n      producer = _ref$producer === void 0 ? null : _ref$producer;\n\n  var _stringMap$get = stringMap.get(profile),\n      cardTitle = _stringMap$get.cardTitle;\n\n  var handleCepChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e, setValues, currentValues) {\n      var cep, res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cep = e.target.value;\n\n              if (!(cep && !cep.includes('_'))) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 4;\n              return fetch(\"https://viacep.com.br/ws/\".concat(cep.replace(/\\D/g, ''), \"/json/\"));\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context.sent;\n              setValues(_objectSpread(_objectSpread({}, currentValues), {}, {\n                zipcode: cep,\n                address: data.logradouro,\n                city: data.localidade,\n                state: data.uf\n              }));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCepChange(_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"card\"\n  }, __jsx(\"div\", {\n    className: \"title-container\"\n  }, __jsx(\"h1\", {\n    className: \"card-title\"\n  }, cardTitle)), __jsx(\"div\", {\n    className: \"card-content\"\n  }, __jsx(\"label\", null, \"Confirmar dados \", __jsx(\"span\", null, \" > \"), \" Endere\\xE7o comercial\"), __jsx(Formik, {\n    initialValues: {\n      address: '',\n      zipcode: '',\n      number: '',\n      complement: '',\n      city: '',\n      state: ''\n    },\n    validate: validate,\n    onSubmit: onSubmit\n  }, function (_ref3) {\n    var errors = _ref3.errors,\n        values = _ref3.values,\n        handleChange = _ref3.handleChange,\n        setValues = _ref3.setValues,\n        setTouched = _ref3.setTouched;\n    return __jsx(Form, {\n      className: \"form-container\"\n    }, __jsx(\"h2\", {\n      className: \"form-title\"\n    }, \"Para finalizar, basta atualizar os dados do seu enderec\\u0327o comercial.\"), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"CEP\"), __jsx(Field, {\n      name: \"zipcode\",\n      mask: \"99999-999\",\n      placeholder: \"CEP\",\n      onChange: function onChange(e) {\n        handleCepChange(e, setValues, values);\n        handleChange('zipcode')(e);\n      },\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"zipcode\",\n      component: \"span\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Endere\\xE7o\"), __jsx(Field, {\n      name: \"address\",\n      mask: null,\n      placeholder: \"Endere\\xE7o\",\n      component: StyledInput,\n      disabled: true\n    }), __jsx(ErrorMessage, {\n      name: \"address\",\n      component: \"span\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"N\\xFAmero\"), __jsx(Field, {\n      name: \"number\",\n      placeholder: \"N\\xFAmero\",\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"number\",\n      component: \"span\"\n    }))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Complemento\"), __jsx(Field, {\n      name: \"complement\",\n      placeholder: \"Complemento\",\n      component: StyledInput\n    }), __jsx(ErrorMessage, {\n      name: \"complement\",\n      component: \"span\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Cidade\"), __jsx(Field, {\n      name: \"city\",\n      mask: null,\n      placeholder: \"Cidade\",\n      component: StyledInput,\n      disabled: true\n    }), __jsx(ErrorMessage, {\n      name: \"city\",\n      component: \"span\"\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Estado\"), __jsx(Field, {\n      name: \"state\",\n      mask: null,\n      placeholder: \"Estado\",\n      component: StyledInput,\n      disabled: true\n    }), __jsx(ErrorMessage, {\n      name: \"state\",\n      component: \"span\"\n    })), __jsx(\"div\", {\n      className: \"button-container\"\n    }, __jsx(Button, {\n      color: \"secundary\",\n      type: \"submit\",\n      tabIndex: 1,\n      loading: loading.toString(),\n      disabled: Object.keys(errors).length > 0\n    }, \"Avan\\xE7ar\")));\n  })));\n};\n\nexport default AddressForm;","map":null,"metadata":{},"sourceType":"module"}