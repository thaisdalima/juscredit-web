{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a0dd31755f5e7200f9a9.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import './styles.scss'\r\nimport Button from '../components/Button/Button';\r\nimport { Fragment } from 'react';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport { Link } from \"react-scroll\";\r\nimport React from \"react\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\n\r\n\r\nconst Index = () => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n \r\n\r\n  \r\n    const [signupModal, setSignupModal] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n                <title>JusCredit - Home</title>\r\n            </Head>\r\n            <main>\r\n                <p>\r\n                <div className=\"map-container\"> \r\n                    <div className=\"map\" />\r\n                     <h1>Antecipe seu </h1>\r\n                         <h1>crédito trabalhista</h1><h2>Têm um processo ganho? Receba agora</h2>       \r\n                    <div className=\"buttons-container\">\r\n                    <Button onClick={()=> Router.push('/Modal')}color=\"primary\">Quero antecipar</Button> \r\n                   <Button onClick={()=> Router.push('/')} color=\"secondary\">Quero investir</Button>\r\n                   <div>\r\n      <Button round onClick={() => setSignupModal(true)}>\r\n        <Assignment /> Signup\r\n      </Button>\r\n      <Dialog\r\n        classes={{\r\n          root: classes.modalRoot,\r\n          paper: classes.modal + \" \" + classes.modalSignup\r\n        }}\r\n        open={signupModal}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={() => setSignupModal(false)}\r\n        aria-labelledby=\"signup-modal-slide-title\"\r\n        aria-describedby=\"signup-modal-slide-description\"\r\n      >\r\n        <Card plain className={classes.modalSignupCard}>\r\n          <DialogTitle\r\n            id=\"signup-modal-slide-title\"\r\n            disableTypography\r\n            className={classes.modalHeader}\r\n          >\r\n            <Button\r\n              simple\r\n              className={classes.modalCloseButton}\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              onClick={() => setSignupModal(false)}\r\n            >\r\n              {\" \"}\r\n              <Close className={classes.modalClose} />\r\n            </Button>\r\n            <h5 className={classes.cardTitle + \" \" + classes.modalTitle}>\r\n              Register\r\n            </h5>\r\n          </DialogTitle>\r\n          <DialogContent\r\n            id=\"signup-modal-slide-description\"\r\n            className={classes.modalBody}\r\n          >\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={5} md={5} className={classes.mlAuto}>\r\n                <InfoArea\r\n                  className={classes.infoArea}\r\n                  title=\"Marketing\"\r\n                  description={\r\n                    <p>\r\n                      We've created the marketing campaign of the website. It\r\n                      was a very interesting collaboration.\r\n                    </p>\r\n                  }\r\n                  icon={Timeline}\r\n                  iconColor=\"rose\"\r\n                />\r\n           \r\n                 </GridItem>\r\n              <GridItem xs={12} sm={5} md={5} className={classes.mrAuto}>\r\n              \r\n                <form className={classes.form}>\r\n                  <CustomInput\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                      className: classes.customFormControlClasses\r\n                    }}\r\n                    inputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment\r\n                          position=\"start\"\r\n                          className={classes.inputAdornment}\r\n                        >\r\n                          <Face className={classes.inputAdornmentIcon} />\r\n                        </InputAdornment>\r\n                      ),\r\n                      placeholder: \"First Name...\"\r\n                    }}\r\n                  />\r\n                  <CustomInput\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                      className: classes.customFormControlClasses\r\n                    }}\r\n                    inputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment\r\n                          position=\"start\"\r\n                          className={classes.inputAdornment}\r\n                        >\r\n                          <Email  />\r\n                        </InputAdornment>\r\n                      ),\r\n                      placeholder: \"Email...\"\r\n                    }}\r\n                  />\r\n                  <CustomInput\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                      className: classes.customFormControlClasses\r\n                    }}\r\n                    inputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment\r\n                          position=\"start\"\r\n                          className={classes.inputAdornment}\r\n                        >\r\n                          \r\n                        </InputAdornment>\r\n                      ),\r\n                      placeholder: \"Password...\"\r\n                    }}\r\n                  />\r\n                  <FormControlLabel\r\n                    classes={{\r\n                      label: classes.label\r\n                    }}\r\n                    control={\r\n                      <Checkbox\r\n                        tabIndex={-1}\r\n                        onClick={() => this.handleToggle(1)}\r\n                     \r\n                        \r\n                        classes={{\r\n                          checked: classes.checked,\r\n                          root: classes.checkRoot\r\n                        }}\r\n                      />\r\n                    }\r\n                    label={\r\n                      <span>\r\n                        I agree to the <a href=\"#pablo\">terms and conditions</a>\r\n                        .\r\n                      </span>\r\n                    }\r\n                  />\r\n                  <div className={classes.textCenter}>\r\n                    <Button round color=\"primary\">\r\n                      Get started\r\n                    </Button>\r\n                  </div>\r\n                </form>\r\n              </GridItem>\r\n            </GridContainer>\r\n          </DialogContent>\r\n        </Card>\r\n      </Dialog>\r\n    </div>\r\n                    <div className=\"cursor-container\">\r\n                 <Button onClick={()=> Router.push('/')} color=\"third\" ><img src=\"/cursor.svg\"/>\r\n                 <Link to=\"antecipar\" > \r\n                        <a className=\"link\">Conheça as vantagens</a>\r\n                        </Link></Button>\r\n                        </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"antecipar\">\r\n               <div className=\"products-bg\" /> \r\n                    <div> <h1>Mais valor para quem vende<br/>\r\n                              Simples para quem investe</h1> \r\n               <h2>\r\n                   Vantagens para quem vende:\r\n               </h2>\r\n                            <img src=\"/agilidade.svg\"/>\r\n                            <h2>\r\n                            <div className=\"buttons-container\"> \r\n                    <Button onClick={()=> Router.push('/')} color=\"sixty\">Quero antecipar</Button>\r\n</div>\r\n                   Vantagens para quem investe:\r\n               </h2>\r\n                            <img src=\"/rentabilidade.svg\"/>\r\n                            <div className=\"buttons-container\"> \r\n                    <Button onClick={()=> Router.push('/')} color=\"sixty\">Quero investir</Button>\r\n</div>       \r\n\r\n               </div>\r\n                     \r\n                    <div className=\"funciona-container\">\r\n                    <div className=\"poligono-container\"/>\r\n                        <h1>Como funciona a plataforma?</h1>\r\n                        <h2>Conte com toda a segurança, agilidade <br/>\r\n                           e praticidade na liberação do seu processo ganho.\r\n                        </h2>  \r\n                        <img src=\"/trabalhador.svg\"/>  \r\n                        </div>\r\n                <div className=\"duvidas-container\">   \r\n                    <h1>Têm dúvidas?</h1>\r\n                     <h2>Queremos te ajudar a resolvê-las</h2>\r\n                        <img src=\"/duvidas.svg\"/>\r\n                    \r\n                    </div> \r\n                    <div className= \"parceiros-container\">\r\n                        <h1> Seja um parceiro JusCredit</h1>\r\n                        <h2>Indique créditos trabalhistas elegíveis e ganhe conosco.</h2>\r\n        \r\n<div>\r\n      <Button  color=\"primary\" onClick={handleClickOpen}>\r\n        Indicar\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Inscreva-se</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          Você receberá um email para criação de senha e completar seu perfil\r\n          Iremos entrar em contato com você para confirmar suas informações.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email @ \"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Enviar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n\r\n</div> \r\n           </div>   \r\n                <br/>\r\n                </p>\r\n            </main>\r\n        </Fragment >\r\n\r\n    );\r\n}\r\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AACA;AAccA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AATA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AATA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AATA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;;;;A","sourceRoot":""}