{"version":3,"file":"static/webpack/static\\development\\pages\\signup\\producer.js.38eda09e547175cc3b49.hot-update.js","sources":["webpack:///./pages/signup/producer.tsx"],"sourcesContent":["import RegisterForm from \"../../components/Register/RegisterForm\";\t\r\nimport { useState, useEffect } from \"react\";\t\r\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\t\r\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\t\r\nimport AddressForm from \"../../components/Register/AddressForm/AddressForm\";\t\r\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\t\r\nimport { useRouter } from \"next/router\";\t\r\nimport ProducerNotFound from \"../../components/Register/ProducerNotFound/ProducerNotFound\";\t\r\n\r\nconst SignupProducer = () => {\t\r\n    const [step, setStep] = useState(0)\t\r\n    const [userValues, setUserValues] = useState(null)\t\r\n    const [confirmationChoice, setConfirmationChoice] = useState(null);\t\r\n    const [loading, setLoading] = useState(false);\t\r\n\r\n    const handleUserSubmit = (values) => {\t\r\n        setUserValues(values)\t\r\n        setStep(1)\t\r\n    }\t\r\n\r\n    const handleConfimationChoice = (choice) => {\t\r\n        setConfirmationChoice(choice)\t\r\n        setStep(2)\t\r\n    }\t\r\n\r\n    const handleConfimation = (value) => {\t\r\n        setStep(3)\t\r\n    }\t\r\n\r\n    const handleAddressSubmit = async (values) => {\t\r\n        setLoading(true)\t\r\n        const addressString = `${values.address}, ${values.number}, ${values.city}, ${values.state}`\t\r\n        const res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${addressString}&key=AIzaSyD9birqocIzncUHjXSWIrx67UAT865gp84`)\t\r\n        const data = await res.json();\t\r\n        const { lat, lng } = data.results[0].geometry.location\t\r\n\r\n        await createProducer({\t\r\n            address: `${values.address}, ${values.number}`,\t\r\n            city: values.city,\t\r\n            state: values.state,\t\r\n            ...userValues,\t\r\n            latitude: lat,\t\r\n            longitude: lng\t\r\n        })\t\r\n        setStep(4)\t\r\n    }\t\r\n\r\n    const createProducer = async (body) => {\t\r\n        try {\t\r\n            const res = await fetch('https://api.organis8.com.br/api/produtores', { method: 'POST', body: JSON.stringify(body) })\t\r\n            const data = await res.json();\t\r\n            return data;\t\r\n        } \t\r\n        catch(e) {\t\r\n            console.error(e)\t\r\n        }   \t\r\n    }\t\r\n    switch (step) {\t\r\n\r\n        case 0:\t\r\n            return <RegisterForm profile=\"producer\" onSubmit={handleUserSubmit} />\t\r\n        case 1:\t\r\n            return <ConfirmationChoice profile=\"producer\" values={userValues} onSubmit={handleConfimationChoice} />\t\r\n        case 2:\t\r\n            return <Confirmation profile=\"producer\" confirmationChoice={confirmationChoice} onSubmit={handleConfimation} />\t\r\n        case 3:\t\r\n            return <AddressForm profile=\"producer\" loading={loading} values={userValues} onSubmit={handleAddressSubmit} />\t\r\n        case 4:\t\r\n            return <RegisterSuccess />\t\r\n    }\t\r\n\r\n\r\n\r\n\r\n}\t\r\nexport default SignupProducer "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AAAA;AAQA;AACA;AACA;AAHA;AAKA;AACA;AANA;AACA;AARA;AAeA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAHA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AACA;AADA;AAAA;AAAA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAiBA;AACA;AAAA;;;;A","sourceRoot":""}