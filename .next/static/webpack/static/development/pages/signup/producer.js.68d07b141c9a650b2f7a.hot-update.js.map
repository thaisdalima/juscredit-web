{"version":3,"file":"static/webpack/static\\development\\pages\\signup\\producer.js.68d07b141c9a650b2f7a.hot-update.js","sources":["webpack:///./components/Register/RegisterForm.tsx"],"sourcesContent":["import './RegisterForm.scss'\r\nimport StyledInput from '../Input/Input'\r\nimport Button from '../Button/Button'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\r\n\r\nconst stringMap = new Map([\r\n    ['user', {\r\n        cardTitle: 'Antecipe o seu crédito',\r\n       \r\n    }],\r\n    ['producer', {\r\n        cardTitle: 'Seja um Investidor',\r\n        \r\n    }],\r\n    ['update-producer', {\r\n        cardTitle: 'Atualizando os meus dados',\r\n        formTitle: 'Confirme seus contatos antes de atualizar seus dados:'\r\n    }]\r\n])\r\n\r\nconst MAIL_REGEX = new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i);\r\nconst PHONE_REGEX = new RegExp(/^\\([1-9]{2}\\) [0-9]{5}\\-[0-9]{4}$/i);\r\nconst validate = (values) => {\r\n    let errors: any = {}\r\n    if (!values.email) {\r\n        errors.email = 'Campo obrigatório'\r\n    } else if (!MAIL_REGEX.test(values.email)) {\r\n        errors.email = 'Email inválido'\r\n    }\r\n\r\n    if (!values.confirmEmail) {\r\n        errors.confirmEmail = 'Campo obrigatório'\r\n    } else if (values.confirmEmail !== values.email) {\r\n        errors.confirmEmail = 'Email não coincide'\r\n    }\r\n    if (!values.phone) {\r\n        errors.phone = 'Campo obrigatório'\r\n    } else if (!PHONE_REGEX.test(values.phone)) {\r\n        errors.phone = 'Celular inválido'\r\n    }\r\n    return errors\r\n}\r\n\r\n\r\nconst RegisterForm = ({ profile, onSubmit }) => {\r\n    const { cardTitle, formTitle } = stringMap.get(profile)\r\n    return (\r\n        <div className=\"card\">\r\n            <label>Confirmar dados</label>\r\n            <h1 className=\"card-title\">{cardTitle}</h1>\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    confirmEmail: '',\r\n                    phone: ''\r\n                }}\r\n                validate={validate}\r\n                onSubmit={({email, phone})=> onSubmit({email,phone})}\r\n            >\r\n                {({ errors, touched }) => {\r\n                    return (\r\n                        <Form className=\"form-container\">\r\n                            <h2 className=\"form-title\">{formTitle}</h2>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Email</label>\r\n                                    <Field\r\n                                        name=\"email\"\r\n                                        mask={null}\r\n                                        placeholder=\"Email\"\r\n                                        component={StyledInput}\r\n                                    />\r\n                                    <ErrorMessage name=\"email\" component=\"span\" />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Confirme seu email</label>\r\n                                    <Field\r\n                                        name=\"confirmEmail\"\r\n                                        mask={null}\r\n                                        placeholder=\"Confirme seu email\"\r\n                                        component={StyledInput}\r\n                                    />\r\n                                    <ErrorMessage name=\"confirmEmail\" component=\"span\" />\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Celular com DDD</label>\r\n                                <Field\r\n                                    name=\"phone\"\r\n                                    mask=\"(99) 99999-9999\"\r\n                                    placeholder=\"Celular com DDD\"\r\n                                    component={StyledInput}\r\n                                />\r\n                                <ErrorMessage name=\"phone\" component=\"span\" />\r\n\r\n                            </div>\r\n                            <div className=\"button-container\">\r\n\r\n                                <Button color=\"primary\" type=\"submit\" tabIndex={1} disabled={(Object.keys(touched).length < 2) || Object.keys(errors).length > 0} >Avançar</Button>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }\r\n                }\r\n\r\n            </Formik>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default RegisterForm"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AADA;AAKA;AADA;AAKA;AACA;AAFA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAOA;AACA;AAAA;;;;A","sourceRoot":""}