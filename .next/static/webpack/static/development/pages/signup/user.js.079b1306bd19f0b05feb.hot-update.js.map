{"version":3,"file":"static/webpack/static\\development\\pages\\signup\\user.js.079b1306bd19f0b05feb.hot-update.js","sources":["webpack:///./pages/signup/user.tsx"],"sourcesContent":["import RegisterForm from \"../../components/Register/RegisterForm\";\r\nimport { useState } from \"react\";\r\nimport ConfirmationChoice from \"../../components/Register/ConfirmationChoice/ConfirmationChoice\";\r\nimport Confirmation from \"../../components/Register/Confirmation/Confirmation\";\r\nimport RegisterSuccess from \"../../components/Register/RegisterSuccess/RegisterSuccess\";\r\n\r\nconst SignupUser = () => {\r\n    const [step, setStep] = useState(0)\r\n    const [userValues, setUserValues] = useState(null)\r\n    const [confirmationChoice, setConfirmationChoice] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [mask, setMask] = useState(Masks.CPF)\r\n\r\n    const handleUserSubmit = (values) => {\r\n        setUserValues(values)\r\n        setStep(1)\r\n    }\r\n\r\n    const handleConfimationChoice = (choice) => {\r\n        setConfirmationChoice(choice)\r\n        setStep(2)\r\n    }\r\n\r\n    const handleConfimation = async (value) => {\r\n        setLoading(true)\r\n        await createUser({\r\n            ...userValues\r\n        })\r\n        setStep(3)\r\n    }\r\n    const createUser = async (body) => {\r\n        try {\r\n            const res = await fetch('https://api.organis8.com.br/api/nao_produtores', { method: 'POST', body: JSON.stringify(body) })\r\n            const data = await res.json();\r\n            return data;\r\n        }\r\n        catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    switch (step) {\r\n\r\n        case 0:\r\n            return <RegisterForm profile=\"user\" onSubmit={handleUserSubmit} />\r\n        case 1:\r\n            return <ConfirmationChoice profile=\"user\" values={userValues} onSubmit={handleConfimationChoice} />\r\n        case 2:\r\n            return <Confirmation loading={loading} profile=\"user\" confirmationChoice={confirmationChoice} onSubmit={handleConfimation} />\r\n        case 3:\r\n            return <RegisterSuccess />\r\n    }\r\n    return (\r\n        <main className=\"be-part-container\">\r\n            <img className=\"bg-left\" src=\"/colored-products-left.svg\" />\r\n            <img className=\"bg-right\" src=\"/be-part/bg.svg\" />\r\n            <div>\r\n                <h1>Insira seu CPF ou CNPJ abaixo</h1>\r\n                <label>\r\n                    Se você é produtor e conhece o cadastro oficial do Ministério (MAPA) e acha que já faz parte, por favor, insira seu CPF ou CNPJ:\r\n                </label>\r\n                <StyledInput\r\n                    mask={mask}\r\n                    beforeMaskedValueChange={beforeMaskedValueChange}\r\n                    placeholder=\"Ex: 111.111.111-11...\"\r\n                    value={documentInput}\r\n                    onChange={handleChange}\r\n                    className={userNotFound && 'not-found'}\r\n                />\r\n                {userNotFound && <span className=\"user-not-found\">Cadastro não encontrado</span>}\r\n                <Button color=\"primary\" onClick={validateDocument} disabled={!documentInput.length} loading={loading.toString()} >Validar cadastro </Button>\r\n                <Link href=\"/signup/producer\"><a>Não estou cadastrado ></a></Link>\r\n            </div>\r\n            <img className=\"producer\" src=\"/be-part/producer.svg\" />\r\n        </main>\r\n    );\r\n\r\n\r\n\r\n}\r\nexport default SignupUser"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAHA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AACA;AADA;AAAA;AAAA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;;;;A","sourceRoot":""}